"use strict";
/**
 * create the db, loading models from
 */
Object.defineProperty(exports, "__esModule", { value: true });
const Schemaload = require("./modelload/schemaload");
const Dataload = require("./modelload/dataload");
const MongoUtils = require("./utils/mongo");
// var FUtils = require(root + '/model/model.js')
const mongoose = require('mongoose');
var mongoConnectionString = process.env.MONGO_DBURL || 'mongodb://localhost/testdb';
var modelPath = process.env.MGNLQ_MODELPATH || 'node_modules/mgnlq_testmodel/testmodel/';
console.log(" uploading data into \n" +
    "from ModelPath: " + modelPath
    + " to     MongoDB: " + mongoConnectionString);
MongoUtils.openMongoose(mongoose, mongoConnectionString).then(() => Schemaload.createDBWithModels(mongoose, modelPath)).then(() => {
    var models = Schemaload.loadModelNames(modelPath);
    return Promise.all(models.map(modelName => Dataload.loadModelData(mongoose, modelPath, modelName)));
}).then(() => {
    MongoUtils.disconnectReset(mongoose);
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9tYWtlZGIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOztHQUVHOztBQUdILHFEQUFxRDtBQUNyRCxpREFBaUQ7QUFFakQsNENBQTRDO0FBQzVDLGlEQUFpRDtBQUNqRCxNQUFNLFFBQVEsR0FBRyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUM7QUFHckMsSUFBSSxxQkFBcUIsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLFdBQVcsSUFBSSw0QkFBNEIsQ0FBQztBQUNwRixJQUFJLFNBQVMsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLGVBQWUsSUFBSyx5Q0FBeUMsQ0FBQztBQUMxRixPQUFPLENBQUMsR0FBRyxDQUFDLHlCQUF5QjtJQUN4QixrQkFBa0IsR0FBRyxTQUFTO01BQy9CLG1CQUFtQixHQUFHLHFCQUFxQixDQUMzQyxDQUFDO0FBQ2IsVUFBVSxDQUFDLFlBQVksQ0FBQyxRQUFRLEVBQUUscUJBQXFCLENBQUMsQ0FBQyxJQUFJLENBQUUsR0FBRyxFQUFFLENBQ2hFLFVBQVUsQ0FBQyxrQkFBa0IsQ0FBQyxRQUFRLEVBQUUsU0FBUyxDQUFDLENBQ3JELENBQUMsSUFBSSxDQUFFLEdBQUUsRUFBRTtJQUNSLElBQUksTUFBTSxHQUFHLFVBQVUsQ0FBQyxjQUFjLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDbEQsT0FBTyxPQUFPLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDLFFBQVEsRUFBQyxTQUFTLEVBQUUsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3ZHLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBRSxHQUFHLEVBQUU7SUFDVCxVQUFVLENBQUMsZUFBZSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBQzFDLENBQUMsQ0FBQyxDQUFDIiwiZmlsZSI6Im1ha2VkYi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBjcmVhdGUgdGhlIGRiLCBsb2FkaW5nIG1vZGVscyBmcm9tXHJcbiAqL1xyXG5cclxuXHJcbmltcG9ydCAqIGFzIFNjaGVtYWxvYWQgZnJvbSAnLi9tb2RlbGxvYWQvc2NoZW1hbG9hZCc7XHJcbmltcG9ydCAqIGFzIERhdGFsb2FkIGZyb20gJy4vbW9kZWxsb2FkL2RhdGFsb2FkJztcclxuXHJcbmltcG9ydCAqIGFzIE1vbmdvVXRpbHMgZnJvbSAnLi91dGlscy9tb25nbyc7XHJcbi8vIHZhciBGVXRpbHMgPSByZXF1aXJlKHJvb3QgKyAnL21vZGVsL21vZGVsLmpzJylcclxuY29uc3QgbW9uZ29vc2UgPSByZXF1aXJlKCdtb25nb29zZScpO1xyXG5cclxuXHJcbnZhciBtb25nb0Nvbm5lY3Rpb25TdHJpbmcgPSBwcm9jZXNzLmVudi5NT05HT19EQlVSTCB8fCAnbW9uZ29kYjovL2xvY2FsaG9zdC90ZXN0ZGInO1xyXG52YXIgbW9kZWxQYXRoID0gcHJvY2Vzcy5lbnYuTUdOTFFfTU9ERUxQQVRIICB8fCAnbm9kZV9tb2R1bGVzL21nbmxxX3Rlc3Rtb2RlbC90ZXN0bW9kZWwvJztcclxuY29uc29sZS5sb2coXCIgdXBsb2FkaW5nIGRhdGEgaW50byBcXG5cIiArXHJcbiAgICAgICAgICAgICBcImZyb20gTW9kZWxQYXRoOiBcIiArIG1vZGVsUGF0aFxyXG4rICAgICAgICAgICBcIiB0byAgICAgTW9uZ29EQjogXCIgKyBtb25nb0Nvbm5lY3Rpb25TdHJpbmdcclxuICAgICAgICAgICApO1xyXG5Nb25nb1V0aWxzLm9wZW5Nb25nb29zZShtb25nb29zZSwgbW9uZ29Db25uZWN0aW9uU3RyaW5nKS50aGVuKCAoKSA9PlxyXG4gICAgU2NoZW1hbG9hZC5jcmVhdGVEQldpdGhNb2RlbHMobW9uZ29vc2UsIG1vZGVsUGF0aClcclxuKS50aGVuKCAoKT0+IHtcclxuICAgIHZhciBtb2RlbHMgPSBTY2hlbWFsb2FkLmxvYWRNb2RlbE5hbWVzKG1vZGVsUGF0aCk7XHJcbiAgICByZXR1cm4gUHJvbWlzZS5hbGwobW9kZWxzLm1hcChtb2RlbE5hbWUgPT4gRGF0YWxvYWQubG9hZE1vZGVsRGF0YShtb25nb29zZSxtb2RlbFBhdGgsIG1vZGVsTmFtZSkpKTtcclxufSkudGhlbiggKCkgPT4ge1xyXG4gICAgIE1vbmdvVXRpbHMuZGlzY29ubmVjdFJlc2V0KG1vbmdvb3NlKTtcclxufSk7XHJcbiJdfQ==
