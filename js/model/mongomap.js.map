{"version":3,"sources":["/projects/nodejs/botbuilder/mgnlq_model//projects/nodejs/botbuilder/mgnlq_model/src/../src/model/mongomap.ts"],"names":[],"mappings":"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","file":"mongomap.js","sourcesContent":["/**\r\n * Functionality to map the \"flat\" categories model to a nested document\r\n *\r\n * @file\r\n */\r\n\r\n\r\n//import * as intf from 'constants';\r\nimport * as debug from 'debugf';\r\n\r\nvar debuglog = debug('mongomap');\r\n\r\nimport * as ISchema from '../modelload/schemaload';\r\n//const loadlog = logger.logger('modelload', '');\r\n\r\nimport *  as IMatch from '../match/ifmatch';\r\nimport * as InputFilterRules from '../match/rule';\r\n//import * as Tools from '../match/tools';\r\nimport * as fs from 'fs';\r\nimport * as Meta from './meta';\r\nimport * as Utils from 'abot_utils';\r\nimport * as CircularSer from 'abot_utils';\r\nimport * as Distance from 'abot_stringdist';\r\nimport * as process from 'process';\r\nimport * as _ from 'lodash';\r\n\r\ntype CatMongoMap = IMatch.CatMongoMap;\r\n/**\r\n * the model path, may be controlled via environment variable\r\n */\r\nvar envModelPath = process.env[\"ABOT_MODELPATH\"] || \"node_modules/abot_testmodel/testmodel\";\r\n\r\n\r\nfunction traverseExecutingContext(obj, context) {\r\n    _.forIn(obj, function (val, key) {\r\n        // console.log(key + \" -> \" + val + \" \");\r\n        context.visit(obj,key, val);\r\n        if (_.isArray(val)) {\r\n            context.enterArray(key,val);\r\n            val.forEach(function(el) {\r\n                if (_.isObject(el)) {\r\n                    traverseExecutingContext(el, context);\r\n                }\r\n            });\r\n            context.leaveArray(key,val);\r\n           // console.log('leaving array key' + key  + \" \" + JSON.stringify(val));\r\n        }\r\n        else if (_.isObject(val)) {\r\n          //  if( _.isArray(val) && _.isObject(val)) {\r\n          //&&      console.log('ABCXASDFS');\r\n          //  };\r\n         //   console.log('is also object' + JSON.stringify(val));\r\n            context.enterObject(key, val);\r\n            traverseExecutingContext(val,context);\r\n            context.leaveObject(key,val);\r\n        }\r\n    });\r\n}\r\n\r\nexport function collectCategories(eSchemaProps : any) {\r\n    var oContext = {\r\n        res : {} as CatMongoMap,\r\n        plainPath : [],\r\n        currentPath : [],\r\n        enterObject : function(key: string, val: any) {\r\n            this.currentPath.push(key);\r\n            this.plainPath.push(key);\r\n        },\r\n        visit: function(obj : any, key: string, val: any) {\r\n            if(key === '_m_category') {\r\n                this.res[val] = {\r\n                    paths : this.currentPath.slice(),\r\n                    fullpath : this.plainPath.join('.')\r\n                }\r\n            }\r\n        },\r\n        leaveObject : function(key: string, val: any) {\r\n            this.currentPath.pop();\r\n            this.plainPath.pop();\r\n        },\r\n        enterArray : function(key : string, val: any) {\r\n            this.enterObject(key, val);\r\n            this.currentPath.push('[]');\r\n        },\r\n        leaveArray : function(key : string, val: any) {\r\n            this.leaveObject(key, val);\r\n            this.currentPath.pop();\r\n        }\r\n    }\r\n    traverseExecutingContext(eSchemaProps, oContext );\r\n    return oContext.res;\r\n}\r\n\r\n/**\r\n * Given a record and a paths expression, return\r\n * the value (string or array) which represents this path\r\n * Note that a trailing array is not expanded,\r\n * @param rec\r\n * @param paths\r\n */\r\nexport function getMemberByPath(rec : any, paths: string[])  : any {\r\n    var root = rec;\r\n    var res = paths.reduce( (prev, segment,index) => {\r\n        debuglog(()=> `at index ${index} segment ${segment} on ${JSON.stringify(prev)}`);\r\n        if(prev === undefined || prev === null) {\r\n            return undefined;\r\n        }\r\n        if(segment !== \"[]\") {\r\n            return prev[segment];\r\n        } else {\r\n            if(index === (paths.length - 1)) {\r\n                return prev;\r\n            }\r\n            if(_.isArray(prev)) {\r\n                if(prev.length > 1) {\r\n                    throw Error('cannot flatten more than one record ');\r\n                }\r\n                return prev[0];\r\n            } else {\r\n                return prev;\r\n            }\r\n        }\r\n    }, rec);\r\n    debuglog(()=> ` herer result ` + res);\r\n    return res;\r\n}\r\n\r\n\r\nfunction constructPath(paths : string [], len : number) {\r\n    return paths.slice(0, len).filter(seg => seg !== '[]').join('.');\r\n}\r\n\r\n\r\n/**\r\n * return a category\r\n * @param mongoMap\r\n * @param cat a category\r\n * @return the constructed path, without any preceding $\r\n */\r\nexport function makeCategoryPath(mongoMap: IMatch.CatMongoMap , category : string) : string {\r\n    return mongoMap[category].fullpath;\r\n}\r\n\r\n/**\r\n * Given a segment path, return the\r\n * @param paths\r\n */\r\nexport function getFirstSegment(paths : string[] ) : string {\r\n    if(paths[0] === '[]'  || paths.length === 0)  {\r\n        throw new Error('did not expect a full array');\r\n    }\r\n    return paths[0];\r\n}\r\n\r\n\r\nexport function makeMongoNameLC(s : string) : string {\r\n  return s.replace(/[^a-zA-Z0-9]/g,'_').toLowerCase();\r\n}\r\n\r\nexport function isNonObjectPath(mongoMap : IMatch.CatMongoMap, category : string) : boolean {\r\n    return mongoMap[category].fullpath.indexOf(\".\") < 0;\r\n}\r\n\r\nexport function getShortProjectedName(mongoMap: IMatch.CatMongoMap, category : string) : string {\r\n    if(isNonObjectPath(mongoMap, category)) {\r\n        return mongoMap[category].fullpath;\r\n    }\r\n    return makeMongoNameLC(category);\r\n}\r\n\r\ngetShortProjectedName\r\n\r\n export function unwindsForNonterminalArrays(mongoMap : IMatch.CatMongoMap) : any[] {\r\n     var paths = Object.keys(mongoMap).map(key =>  mongoMap[key].paths);\r\n     var res = [];\r\n     var seenAccess = {} as { [key:string] : boolean};\r\n     return paths.reduce( (prev, path) => {\r\n        var prefix = '';\r\n        return path.reduce( (prev, segment, index) => {\r\n            if(path.length - 1  !== index) {\r\n                // last segment never of interest, even if []\r\n                if(segment ==='[]') {\r\n                    var expandPath = '$' + constructPath(path,index);\r\n                    if(!seenAccess[expandPath]) {\r\n                        seenAccess[expandPath] = true;\r\n                        prev.push({\r\n                            $unwind : {\r\n                                path : expandPath,\r\n                                preserveNullAndEmptyArrays : true\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                return prev;\r\n            }\r\n            return prev;\r\n        }, prev);\r\n     }, res);\r\n }\r\n\r\nexport function makeMongoMap(oDoc : ISchema.IModelDoc, eSchema : ISchema.IExtendedSchema ) : IMatch.CatMongoMap {\r\n    var oMongoMap = {} as CatMongoMap;\r\n    debuglog( () => 'creating mongomap for ' + JSON.stringify(eSchema.modelname, undefined, 2) + ' and ' + oDoc.modelname );\r\n    debuglog( () =>'creating mongomap for doc ' + JSON.stringify(oDoc, undefined, 2));\r\n    debuglog( () =>'colleting from eSchema.props' + JSON.stringify(eSchema.props,undefined,2));\r\n    var res = collectCategories(eSchema.props);\r\n    oDoc._categories.forEach(cat => {\r\n        // cross check\r\n        if(!res[cat.category]) {\r\n            console.log('here present keys' + Object.keys(res).sort().join(\"; \"));\r\n            console.log(`category ${cat.category} is not in eSchema`); // + JSON.stringify(eSchema,undefined,2)\r\n            console.log(`document has `+ oDoc._categories.map(cat => cat.category).join('; '));\r\n//process.exit(-1);\r\n           console.log(`category \"${cat.category}\" is not in eSchema for ${oDoc.modelname} + ${eSchema.modelname} : `\r\n            + \"=====Schema:\\n\"+ JSON.stringify(eSchema,undefined,2).substring(0,400)\r\n            + \"\\n========oDoc: \\n\" + JSON.stringify(oDoc,undefined,2).substring(0,400));\r\n            process.exit(-1);\r\n            throw new Error(`category ${cat.category} is not in eSchema for ${oDoc.modelname} + ${eSchema.modelname} : `\r\n            + JSON.stringify(eSchema,undefined,2).substring(0,200)\r\n            + \"\\n=========== \" + JSON.stringify(oDoc,undefined,2).substring(0,400));\r\n        }\r\n    });\r\n    return res;\r\n}\r\n\r\n"],"sourceRoot":"ABC"}