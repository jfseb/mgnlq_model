{"version":3,"sources":["/projects/nodejs/botbuilder/mgnlq_model/src//projects/nodejs/botbuilder/mgnlq_model/src/../src/match/breakdown.ts"],"names":[],"mappings":"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","file":"breakdown.js","sourcesContent":["/**\r\n * @file\r\n * @module jfseb.mgnlq_model.breakdown\r\n * @copyright (c) 2016 Gerd Forstmann\r\n */\r\n\r\nimport * as debug from 'debug';\r\nconst debuglog = debug('breakdown')\r\n\r\nimport * as IMatch from './ifmatch'\r\n\r\n\r\n\r\nexport function cleanseString(sString: string): string {\r\n    var len = 0;\r\n    while (len !== sString.length) {\r\n        len = sString.length;\r\n        sString = sString.replace(/\\s+/g, ' ');\r\n        sString = sString.replace(/^\\s+/, '');\r\n        sString = sString.replace(/\\s+$/, '');\r\n        sString = sString.replace(/^[,;.]+/, '');\r\n        sString = sString.replace(/[,;.]+$/, '');\r\n    }\r\n    return sString\r\n}\r\n\r\nexport function cleanseStringLeaveDots(sString: string): string {\r\n    var len = 0;\r\n    while (len !== sString.length) {\r\n        len = sString.length;\r\n        sString = sString.replace(/\\s+/g, ' ');\r\n        sString = sString.replace(/^\\s+/, '');\r\n        sString = sString.replace(/\\s+$/, '');\r\n        sString = sString.replace(/^[,;!?]+/, '');\r\n        sString = sString.replace(/[,;!?]+$/, '');\r\n    }\r\n    return sString\r\n}\r\n\r\n\r\nexport function cleanseQuotedString(sString: string): string {\r\n    var len = 0;\r\n    while (len !== sString.length) {\r\n        len = sString.length;\r\n        sString = sString.replace(/\\s\\s+/g, ' ');\r\n        sString = sString.replace(/\\s+/g, ' ');\r\n        sString = sString.replace(/^\\s+/, '');\r\n        sString = sString.replace(/\\s+$/, '');\r\n        sString = sString.replace(/^[,;.]+/, '');\r\n        sString = sString.replace(/[,;.]+$/, '');\r\n    }\r\n    return sString\r\n}\r\n\r\nconst regexpRemoveDouble = new RegExp(/^\\\"(\\\".*\\\")\\\"$/);\r\nconst striptail = new RegExp(/^\\\"([^\\\"]+)\"$/)\r\n\r\nexport function trimQuoted(sString: string): string {\r\n    var skipUntil = 0;\r\n    var stripped = sString;\r\n    var m = regexpRemoveDouble.exec(sString);\r\n    while (m) {\r\n        stripped = m[1];\r\n        m = regexpRemoveDouble.exec(stripped);\r\n    }\r\n    debuglog(\"stripped \" + stripped);\r\n    m = striptail.exec(stripped);\r\n    if (m) {\r\n        return m[1];\r\n    }\r\n    return cleanseString(sString);\r\n}\r\n\r\n\r\n\r\nexport function trimQuotedSpaced(sString: string): string {\r\n    var skipUntil = 0;\r\n    sString = sString.replace(/^\"\\s+/g, '\"');\r\n    sString = sString.replace(/\\s+\\\"$/g, '\"');\r\n    return sString;\r\n}\r\n\r\n\r\nexport function recombineQuoted(aArr: Array<string>): Array<string> {\r\n    var skipUntil = 0;\r\n    aArr = aArr.map(function (s, index) {\r\n        if (index < skipUntil) {\r\n            debuglog(\"skipping >\" + s + \"<\");\r\n            return undefined;\r\n        }\r\n        if (/^\"/.exec(s)) {\r\n            var i = index;\r\n            while (i < aArr.length && (!/\"$/.exec(aArr[i]) || (index === i && s === '\"'))) {\r\n                i = i + 1;\r\n            }\r\n            if (i === aArr.length) {\r\n                debuglog(\"Unterminated quoted string\");\r\n                return s;\r\n            } else {\r\n                skipUntil = i + 1;\r\n                var res = aArr.slice(index, i + 1).join(\" \");\r\n            }\r\n            return res;\r\n        }\r\n        return s;\r\n    }).filter(function (s) {\r\n        return s !== undefined;\r\n    }).map(function (s) {\r\n        return trimQuotedSpaced(s);\r\n    })\r\n    return aArr;\r\n}\r\n\r\nexport function isQuoted(sString) {\r\n    return !!/^\".*\"$/.exec(sString);\r\n}\r\n\r\nexport function countSpaces(sString: string) {\r\n    var r = 0;\r\n    for (var i = 0; i < sString.length; ++i) {\r\n        if (sString.charAt(i) === ' ') {\r\n            r = r + 1;\r\n        }\r\n    }\r\n    return r;\r\n}\r\n\r\nexport interface ITokenizedString {\r\n    tokens : string[],\r\n    fusable : boolean[];\r\n    //indexMap : { [key:number] : { fuse: boolean}};\r\n}\r\n\r\nvar Quotes = /^\"([^\"]+)\"/;\r\n\r\nexport function swallowQuote(str : string, i : number) : { token : string, nextpos : number} {\r\n     var m = Quotes.exec(str.substring(i));\r\n     if(!m) {\r\n          return { token: undefined,\r\n                nextpos : i\r\n         }\r\n     }\r\n     return {\r\n         token : cleanseStringLeaveDots(m[1]),\r\n         nextpos : (i + m[0].length)\r\n     }\r\n}\r\n\r\nvar Word2 = /^([.]?([-#A-Z_a-z0-9\\/\\\\\\%\\$&]([\\'.][-#A-Z_a-z0-9\\/\\\\\\%\\$&])*)+)/;\r\nvar Word = /^(([^.,;\\'\\\"]|(\\.[^ ,;\\'\\\"]))([^. ,;?!\\\"']|(\\.[^ ,;?!\\\"'])|(\\'[^. ,;?!\\\"\\'])*)+)/;\r\nexport function swallowWord(str : string, i : number) : { token : string, nextpos : number} {\r\n     var m = Word.exec(str.substring(i));\r\n     if(!m) {\r\n         return { token: undefined,\r\n                nextpos : i\r\n         }\r\n     }\r\n     return {\r\n         token : m[1],\r\n         nextpos : (i + m[0].length)\r\n     }\r\n}\r\n\r\nfunction pushToken(res : ITokenizedString, token : string) {\r\n    res.tokens.push(token);\r\n    res.fusable[res.tokens.length] = true;\r\n}\r\n\r\n/**\r\n * Returns true iff tokenized represents multiple words, which\r\n * can potenially be added together;\r\n */\r\nexport function isCombinableSplit(tokenized : ITokenizedString) {\r\n   if(tokenized.tokens.length <= 1) {\r\n      return false;\r\n   }\r\n   for(var i = 1; i < tokenized.tokens.length; ++i) {\r\n       if(!tokenized.fusable[i]) {\r\n           return false;\r\n       }\r\n   }\r\n   return true;\r\n}\r\n\r\n/**\r\n * return true iff  range @ index is a suitable combinable overlap\r\n *\r\n * (typically in the parsed real string)\r\n * return the targetindex or -1 if impossible\r\n */\r\nexport function isCombinableRangeReturnIndex(range : IMatch.IRange , fusable: boolean[], index: number) {\r\n    var start = index + range.low;\r\n    var end = index + range.high;\r\n    // example range = -1, 0             index = 1  => start = 0, end = 1, test fusable[1]\r\n    for(var i = start; i < end; ++i) {\r\n        if(!fusable[i+1]) {\r\n            return -1;\r\n        }\r\n    }\r\n    return start;\r\n}\r\n\r\nexport function combineTokens(range : IMatch.IRange , index: number, tokens : string[]) {\r\n    var start = index + range.low;\r\n    var end = index + range.high;\r\n    var res = [];\r\n    for(var i = start; i <= end; ++i) {\r\n        res.push(tokens[i]);\r\n    }\r\n    return res.join(\" \");\r\n}\r\n\r\n\r\n/**\r\n *\r\n * Note: this tokenizer recognized .gitigore or .a.b.c as one token\r\n * trailing . is stripped!\r\n *@param {string} sString , e.g. \"a,b c;d O'Hara and \"murph'ys\"\r\n *@return {Array<String>} broken down array, e.g.\r\n * [[\"a b c\"], [\"a\", \"b c\"], [\"a b\", \"c\"], ....[\"a\", \"b\", \"c\"]]\r\n */\r\nexport function tokenizeString(sString: string, spacesLimit?: number): ITokenizedString {\r\n    var res = {\r\n        tokens: [],\r\n        fusable :[false]\r\n    } as ITokenizedString;\r\n    var i = 0;\r\n    var seenSep= false;\r\n    while (i <sString.length ) {\r\n        switch(sString.charAt(i)) {\r\n            case '\"':\r\n                var { token, nextpos } = swallowQuote(sString,i);\r\n                if(nextpos === i) {\r\n                    // unterminated quote, treat like separator\r\n                    res.fusable[res.tokens.length] = false;\r\n                    seenSep = true;\r\n                    ++i;\r\n                } else if(token === \"\") {\r\n                    res.fusable[res.tokens.length] = false;\r\n                    seenSep = true;\r\n                    i = nextpos;\r\n                } else {\r\n                    res.fusable[res.tokens.length] = false;\r\n                    pushToken(res,token);\r\n                    res.fusable[res.tokens.length] = false;\r\n                    i = nextpos;\r\n                }\r\n            break;\r\n            case '\\t':\r\n            case '\\n':\r\n            case '\\r':\r\n            case ' ':\r\n                i++;\r\n            break;\r\n            case ':':\r\n            case ',':\r\n            case '?':\r\n            case '!':\r\n            case ';':\r\n                res.fusable[res.tokens.length] = false;\r\n                seenSep = true;\r\n                ++i;\r\n            break;\r\n            case '.':\r\n            default:\r\n                var {token, nextpos} = swallowWord(sString,i);\r\n                if(token) {\r\n                    pushToken(res,token);\r\n                    i = nextpos;\r\n                } else {\r\n                    res.fusable[res.tokens.length] = false;\r\n                    i++\r\n                }\r\n            break;\r\n        }\r\n    }\r\n    res.fusable[res.tokens.length] = false;\r\n    return res;\r\n}\r\n\r\nexport function makeMatchPattern(str: string) {\r\n    var tokens = tokenizeString(str);\r\n    var bestlen = 0;\r\n    if(!isCombinableSplit(tokens)) {\r\n        return undefined;\r\n    }\r\n    var best = {\r\n        longestToken : \"\",\r\n        span: {low: 0, high: 0}\r\n    };\r\n\r\n    if(tokens.tokens.length > 1) {\r\n        tokens.tokens.forEach(function(token,index) {\r\n            var len = token.length;\r\n            if (len > bestlen) {\r\n                bestlen = len;\r\n                best.longestToken = token;\r\n                best.span.low = -index;\r\n            }\r\n        });\r\n        best.span.high = tokens.tokens.length + best.span.low - 1;\r\n        return best;\r\n    }\r\n    return undefined;\r\n}\r\n\r\n/**\r\n *@param {string} sString , e.g. \"a b c\"\r\n *@return {Array<Array<String>>} broken down array, e.g.\r\n *[[\"a b c\"], [\"a\", \"b c\"], [\"a b\", \"c\"], ....[\"a\", \"b\", \"c\"]]\r\n */\r\nexport function breakdownString(sString: string, spacesLimit?: number): Array<Array<String>> {\r\n    var rString = cleanseString(sString);\r\n    if (spacesLimit === undefined) {\r\n        spacesLimit = -1;\r\n    }\r\n    var u = rString.split(\" \");\r\n    u = recombineQuoted(u);\r\n    var k = 0;\r\n    if (u.length === 0) {\r\n        return [[]];\r\n    }\r\n    var w = [[u[0]]];\r\n    while (k < u.length - 1) {\r\n        k = k + 1;\r\n        var r1 = w.map(function (entry) {\r\n          //  debuglog(debuglog.enabled ? JSON.stringify(entry): \"-\");\r\n            var entry = entry.slice(0);\r\n          //  debuglog(debuglog.enabled ? JSON.stringify(entry): \"-\");\r\n            var preventry = entry[entry.length -1];\r\n            // do not combine quoted strings!\r\n            if (preventry === null) {\r\n                /* do nothing */ //return entry;\r\n            } else if (isQuoted(u[k]) || isQuoted(preventry)) {\r\n                entry[entry.length - 1] = null;\r\n            } else {\r\n                var combined = preventry + \" \" + u[k];\r\n                if (spacesLimit > 0 && countSpaces(combined) > spacesLimit) {\r\n                    combined = null;\r\n                }\r\n                entry[entry.length - 1] = combined;\r\n            }\r\n            return entry;\r\n        });\r\n        var r2 = w.map(function (entry) {\r\n         //   debuglog(debuglog.enabled ? (\"2 >\" + JSON.stringify(entry)) : \"-\");\r\n            var entry = entry.slice(0);\r\n            entry.push(u[k]);\r\n            return entry\r\n        });\r\n        //debuglog(JSON.stringify(r1));\r\n        //debuglog(JSON.stringify(r2));\r\n        w = r1.concat(r2);\r\n    }\r\n    w = w.filter(function(oMap) {\r\n        return oMap.every(function(sWord) {\r\n            return sWord !== null;\r\n        });\r\n    });\r\n    return w.map(function (oMap) {\r\n        return oMap.map(function (sWord) {\r\n            return trimQuoted(sWord);\r\n        });\r\n    });\r\n}\r\n\r\n\r\n"],"sourceRoot":"ABC"}