{"version":3,"sources":["/projects/nodejs/botbuilder/fdevstar_monmove/src/../src/modelload/schemaload.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;;AAEH,oCAAoC;AACpC,gCAAgC;AAEhC,IAAI,QAAQ,GAAG,KAAK,CAAC,YAAY,CAAC,CAAC;AAKnC,oDAAoD;AACpD,0CAA0C;AAC1C,yBAAyB;AAEzB,yCAAyC;AAEzC,4CAA4C;AAC5C,8CAA8C;AAC9C,mCAAmC;AACnC,4BAA4B;AAC5B,qCAAqC;AAEpC,QAAgB,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;AAE3C;;GAEG;AACH,OAAO,CAAC,4BAA4B,CAAC,CAAC,QAAQ,CAAC,CAAC;AAChD;;GAEG;AACH,IAAI,YAAY,GAAG,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,IAAI,uCAAuC,CAAC;AAE5F,kBAAyB,CAAe,EAAE,CAAe;IACvD,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AACtC,CAAC;AAFD,4BAEC;AAKD,MAAM,oBAAoB,GAAG;IACzB,WAAW,EAAE;QACX,MAAM,EAAE,MAAM;QACd,MAAM,EAAE,IAAI;QACZ,UAAU,EAAG,IAAI;KAClB;IACD,QAAQ,EAAE;QACR,MAAM,EAAE,MAAM;QACd,MAAM,EAAE,IAAI;QACZ,UAAU,EAAG,IAAI;KAClB;IACD,mBAAmB,EAAE;QACnB,MAAM,EAAE,MAAM;QACd,MAAM,EAAE,IAAI;QACZ,UAAU,EAAG,IAAI;KAClB;IACD,gBAAgB,EAAE;QAChB,MAAM,EAAE,MAAM;QACd,MAAM,EAAE,IAAI;QACZ,UAAU,EAAG,IAAI;KAClB;IACD,OAAO,EAAG,EAAE;IACZ,OAAO,EAAG,EAAE;CACf,CAAC;AACF,MAAM,oBAAoB,GAAG;IACzB,WAAW,EAAG,MAAM;CACvB,CAAC;AAIF,kBAAkB;AAElB,wBAA+B,SAAkB;IAC/C,SAAS,GAAG,SAAS,IAAI,YAAY,CAAC;IACtC,IAAI,IAAI,GAAG,MAAM,CAAC,cAAc,CAAC,IAAI,GAAG,SAAS,GAAG,cAAc,CAAC,CAAC;IACpE,IAAI,CAAC,OAAO,CAAC,IAAI;QACf,EAAE,CAAA,CAAC,IAAI,KAAK,uBAAuB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACxC,MAAM,IAAI,KAAK,CAAC,uDAAuD,CAAC,CAAC;QAC7E,CAAC;IACH,CAAC,CAAC,CAAA;IACF,MAAM,CAAC,IAAI,CAAC;AACd,CAAC;AATD,wCASC;AAkBA,CAAC;AAkBD,CAAC;AAEF,iBAAwB,GAAY;IAChC,EAAE,CAAA,CAAC,GAAG,KAAK,QAAQ,CAAC,CAAC,CAAC;QAClB,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;IACD,EAAE,CAAA,CAAC,GAAG,KAAK,SAAS,CAAC,CAAC,CAAC;QACnB,MAAM,CAAC,OAAO,CAAC;IACnB,CAAC;IACD,EAAE,CAAA,CAAC,GAAG,KAAK,QAAQ,CAAC,CAAC,CAAC;QAClB,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;IACD,MAAM,IAAI,KAAK,CAAC,gBAAgB,GAAG,GAAG,GAAG,wCAAwC,CAAC,CAAC;AACvF,CAAC;AAXD,0BAWC;AAED,8BAAqC,GAAS,EAAE,GAAS,EAAE,GAAY;IACnE,EAAE,CAAA,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC;QAC3B,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC;QAChB,MAAM,CAAC;IACX,CAAC;IAAA,CAAC;IACF,EAAE,CAAA,CAAC,GAAG,KAAK,MAAM,IAAI,OAAO,GAAG,KAAK,QAAQ,CAAC,CAAC,CAAC;QAC3C,IAAI,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;QACrB,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACjB,CAAC;AACL,CAAC;AATD,oDASC;AAED,2BAA2B,GAAG,EAAE,EAAE;IAC9B,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,UAAU,GAAG,EAAE,GAAG;QAC/B,4CAA4C;QACxC,EAAE,CAAC,GAAG,EAAC,GAAG,EAAC,GAAG,CAAC,CAAC;QAChB,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACjB,GAAG,CAAC,OAAO,CAAC,UAAS,EAAE;gBACnB,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;oBACjB,iBAAiB,CAAC,EAAE,EAAC,EAAE,CAAC,CAAC;gBAC7B,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC;QACD,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAClB,iBAAiB,CAAC,GAAG,CAAC,GAAG,CAAC,EAAC,EAAE,CAAC,CAAC;QACnC,CAAC;IACL,CAAC,CAAC,CAAC;AACP,CAAC;AAED,+BAA+B,GAAG;IAC9B,MAAM,CAAC,iBAAiB,CAAC,GAAG,EAAC,oBAAoB,CAAC,CAAC;IACnD;;;;;;;;;;;;;;;MAeE;AACN,CAAC;AAED,mBAA0B,CAAO;IAC9B,IAAI,OAAO,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IAC7B,qDAAqD;IACrD,qBAAqB,CAAC,OAAO,CAAC,CAAC;IAC/B,MAAM,CAAC,OAAO,CAAC;AAClB,CAAC;AALD,8BAKC;AAED,4BAAoC,SAA2B,EAAG,KAAY;IAC1E,IAAI,UAAU,GAAG,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAC5C,IAAI,KAAK,GAAG,KAAK,IAAI,QAAQ,CAAC;IAC7B,IAAI,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,yDAAyD;IACrG,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAC9B,MAAM,CAAC,MAAM,CAAC;AACnB,CAAC;AAND,gDAMC;AAED,oCAA2C,SAAiB,EAAE,SAAkB;IAC9E,IAAI,SAAS,GAAG,MAAM,CAAC,cAAc,CAAC,IAAI,GAAG,SAAS,GAAG,GAAG,GAAG,SAAS,GAAG,4BAA4B,CAAC,CAAC;IACzG,SAAS,CAAC,SAAS,GAAG,SAAS,CAAC;IAChC,MAAM,CAAC,SAAS,CAAC;AACnB,CAAC;AAJD,gEAIC;AAED,sBAA6B,SAAiB,EAAE,SAAkB;IAChE,IAAI,MAAM,GAAG,MAAM,CAAC,cAAc,CAAC,IAAI,GAAG,SAAS,GAAG,GAAG,GAAG,SAAS,GAAG,iBAAiB,CAAC,CAAC;IAC3F,MAAM,CAAC,SAAS,GAAG,SAAS,CAAC;IAC7B,MAAM,CAAC,MAAM,CAAC;AAChB,CAAC;AAJD,oCAIC;AAED,IAAI,QAAQ,GAAG,MAAM,CAAC,OAAO,CAAC;AAM7B,CAAC;AAGF,+BAAuC,QAAoB,EAAE,SAAsB;IAC/E,QAAQ,CAAE,MAAI,iBAAiB,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC;IACtD,IAAI,GAAG,GAAG,EAAE,MAAM,EAAG,QAAQ,CAAC,MAAM;QAChC,SAAS,EAAG,QAAQ,CAAC,SAAS;QAC9B,iBAAiB,EAAG,qBAAqB,CAAC,QAAQ,CAAC,SAAS,CAAC;QAC7D,cAAc,EAAG,uBAAuB,CAAC,QAAQ,CAAC,SAAS,CAAC;KAC3C,CAAC;IACtB,MAAM,CAAE,MAAc,CAAC,MAAM,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;AAClD,CAAC;AARD,sDAQC;AAED;;;GAGG;AACH,+BAAsC,cAAuB;IACzD,EAAE,CAAA,CAAC,cAAc,KAAK,cAAc,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QACjD,MAAM,IAAI,KAAK,CAAC,wBAAwB,GAAG,cAAc,CAAC,CAAC;IAC/D,CAAC;IACD,EAAE,CAAC,CAAC,cAAc,CAAC,MAAM,CAAC,cAAc,CAAC,MAAM,GAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;QACzD,MAAM,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,EAAC,cAAc,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC;IAC/D,CAAC;IACD,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAC;AACrD,CAAC;AARD,sDAQC;AAED;;;GAGG;AACH,iCAAwC,SAAkB;IACtD,EAAE,CAAA,CAAC,SAAS,KAAK,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QACvC,MAAM,IAAI,KAAK,CAAC,wBAAwB,GAAG,SAAS,CAAC,CAAC;IAC1D,CAAC;IACD,EAAE,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,GAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;QAC/C,MAAM,CAAC,SAAS,GAAG,GAAG,CAAC;IAC3B,CAAC;IACD,MAAM,CAAC,SAAS,CAAC;AACrB,CAAC;AARD,0DAQC;AAED,2BAAkC,QAAc;IAC9C,IAAI,YAAY,GAAG,QAAQ,CAAC,MAAM,CAAC,oBAAoB,CAAC,CAAC;IACvD,qCAAqC;IACrC,YAAY,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC;IACzC,MAAM,CAAC,YAAY,CAAC;IACpB,kCAAkC;AACtC,CAAC;AAND,8CAMC;AAED,gCAAuC,QAA4B;IAC/D,IAAI,WAAW,GAAG,qBAAqB,CAAC,gBAAQ,CAAC,oBAAoB,CAAC,CAAA;IACtE,EAAE,CAAA,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACjD,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;IACvC,CAAC;IACD,IAAI,YAAY,GAAG,iBAAiB,CAAC,QAAQ,CAAC,CAAC;IAC/C,IAAI,OAAO,GAAG,QAAQ,CAAC,KAAK,CAAC,qBAAqB,CAAC,gBAAQ,CAAC,oBAAoB,CAAC,EAAE,YAAY,CAAC,CAAC;IACjG,eAAe,CAAC,OAAO,CAAC,CAAC;IACzB,MAAM,CAAC,OAAO,CAAC;AACnB,CAAC;AATD,wDASC;AAED,yBAAgC,KAA2B;IACvD,MAAM,CAAC,KAAK,CAAC;IACb;;;;;;;;;;;;MAYE;AACN,CAAC;AAfD,0CAeC;AAED,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAG/B,kBAAyB,EAAW,EAAE,IAAa,EAAE,KAAW,EAAE,GAAS;IACvE,IAAI,MAAM,GAAG,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IACtC,QAAQ,CAAC,gBAAgB,GAAG,IAAI,CAAC,CAAC;IAElC,MAAM,CAAC,MAAM,CAAC,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;IACjD,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAClC,EAAE,CAAC,aAAa,CAAC,gBAAgB,GAAG,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,EAAC,SAAS,EAAC,CAAC,CAAC,CAAC,CAAC;IAE7E,IAAI,KAAK,GAAG,EAAE,CAAC;IACf,IAAI,CAAC;QACD,KAAK,GAAG,MAAM,CAAC,cAAc,CAAC,uBAAuB,CAAC,CAAC;IAC3D,CAAC;IAAC,KAAK,CAAA,CAAC,EAAE,CAAC,CAAC,CAAC;IAEb,CAAC;IACD,KAAK,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,EAAG,EAAE;QACb,IAAI,EAAG,IAAI;QACX,MAAM,EAAG,MAAM;QACf,KAAK,EAAG,KAAK;QACjB,GAAG,EAAG,GAAG,EAAC,CAAC;IACnB,EAAE,CAAC,aAAa,CAAC,uBAAuB,EAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAC,SAAS,EAAC,CAAC,CAAC,CAAC,CAAC;AAChF,CAAC;AApBD,4BAoBC;AAED,oBAA2B,EAAW,EAAE,IAAa,EAAE,KAAW;IAC9D,IAAI,MAAM,GAAG,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IACtC,MAAM,CAAC,MAAM,CAAC,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;IACjD,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAClC,IAAI,GAAG,GAAG,MAAM,CAAC,cAAc,CAAC,gBAAgB,GAAG,MAAM,CAAC,CAAC;IAC3D,MAAM,CAAC,GAAG,CAAC;AACf,CAAC;AAND,gCAMC;AAED,+BAAsC,QAA8B;IAChE,OAAO,CAAC,GAAG,CAAC,sBAAsB,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC;IACzD,IAAI,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC;IAC1B,QAAQ,CAAC,IAAI,GAAG;QACZ,QAAQ,CAAC,+BAA+B,GAAG,QAAQ,CAAC,SAAS,GAAK,IAAI,CAAC,SAAS,CAAC,SAAS,EAAC,SAAS,EAAC,CAAC,CAAC,CAAC,CAAC;QACzG,IAAI,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;QAC3C,EAAE,CAAA,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YACxB,MAAM,KAAK,CAAC,sCAAsC,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC;QAC3E,CAAC;QACD,IAAI,KAAK,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;QACzB,GAAG,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,CAAE,CAAC,CAAC;YACtB,mEAAmE;YACnE,QAAQ,CAAC,MAAM,EAAC,QAAQ,CAAC,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;QAClD,CAAC,CACA,CAAC;QACF,MAAM,CAAC,GAAG,CAAC;IACf,CAAC,CAAA;IACA,IAAI,SAAS,GAAG,QAAQ,CAAC,QAAQ,CAAC;IACnC,QAAQ,CAAC,QAAQ,GAAG;QAChB,QAAQ,CAAC,kCAAkC,GAAI,IAAI,CAAC,SAAS,CAAC,SAAS,EAAC,SAAS,EAAC,CAAC,CAAC,CAAC,CAAC;QACtF,IAAI,GAAG,GAAG,SAAS,CAAC,KAAK,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;QAC/C,EAAE,CAAA,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YACxB,MAAM,KAAK,CAAC,uBAAuB,CAAC,CAAC;QACzC,CAAC;QACD,IAAI,KAAK,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;QACzB,GAAG,CAAC,IAAI,CAAE,CAAC,CAAC;YACT,oEAAoE;YACnE,QAAQ,CAAC,UAAU,EAAC,QAAQ,CAAC,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;QACtD,CAAC,CACA,CAAC;QACF,MAAM,CAAC,GAAG,CAAC;IACf,CAAC,CAAA;IACA,IAAI,UAAU,GAAG,QAAQ,CAAC,SAAS,CAAC;IACpC,QAAQ,CAAC,SAAS,GAAG;QAClB,QAAQ,CAAC,MAAM,mCAAmC,GAAI,IAAI,CAAC,SAAS,CAAC,SAAS,EAAC,SAAS,EAAC,CAAC,CAAC,CAAC,CAAC;QAC7F,IAAI,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAClD,IAAI,GAAG,GAAG,UAAU,CAAC,KAAK,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;QAChD,GAAG,CAAC,IAAI,CAAE,CAAC,CAAC;YACT,QAAQ,CAAC,MAAK,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,EAAC,CAAC,CAAC,CAAE,CAAC;YAClE,QAAQ,CAAC,WAAW,EAAC,QAAQ,CAAC,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;QACvD,CAAC,CACA,CAAC;QACF,MAAM,CAAC,GAAG,CAAC;IACf,CAAC,CAAA;AACL,CAAC;AA5CD,sDA4CC;AAED,+BAAsC,QAA8B;IAChE,QAAQ,CAAC,sBAAsB,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC;IACtD,IAAI,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC;IAC1B,QAAQ,CAAC,IAAI,GAAG;QACZ,QAAQ,CAAC,MAAM,gCAAgC,GAAI,IAAI,CAAC,SAAS,CAAC,SAAS,EAAC,SAAS,EAAC,CAAC,CAAC,CAAC,CAAC;QAC1F,IAAI,KAAK,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;QACzB,IAAI,GAAG,GAAG,UAAU,CAAC,MAAM,EAAC,QAAQ,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;QACvD,QAAQ,CAAE,MAAK,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,iBAAiB,GAAG,KAAK,CAAC,CAAC;QACnF,MAAM,CAAC;YACH,IAAI,EAAG;gBACH,MAAM,CAAC;oBACH,IAAI,EAAG;wBACH,MAAM,CAAC,IAAI,OAAO,CAAC,UAAS,OAAO,EAAE,MAAM;4BACvC,UAAU,CAAC,cAAa,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;wBAC/C,CAAC,CAAC,CAAC;oBACP,CAAC;iBACJ,CAAA;YACL,CAAC;SACJ,CAAA;IACL,CAAC,CAAA;IACD,IAAI,SAAS,GAAG,QAAQ,CAAC,QAAQ,CAAC;IAClC,QAAQ,CAAC,QAAQ,GAAG;QAChB,QAAQ,CAAC,oCAAoC,GAAI,IAAI,CAAC,SAAS,CAAC,SAAS,EAAC,SAAS,EAAC,CAAC,CAAC,CAAC,CAAC;QACxF,IAAI,KAAK,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;QACzB,IAAI,GAAG,GAAG,UAAU,CAAC,UAAU,EAAC,QAAQ,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;QAC3D,QAAQ,CAAC,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,iBAAiB,GAAG,KAAK,CAAC,CAAC;QAC7E,MAAM,CAAC,IAAI,OAAO,CAAC,UAAS,OAAO,EAAE,MAAM;YACvB,UAAU,CAAC,cAAa,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAC;IACvB,CAAC,CAAA;IACA,IAAI,UAAU,GAAG,QAAQ,CAAC,SAAS,CAAC;IACpC,QAAQ,CAAC,SAAS,GAAG;QAClB,QAAQ,CAAC,qCAAqC,GAAI,IAAI,CAAC,SAAS,CAAC,SAAS,EAAC,SAAS,EAAC,CAAC,CAAC,CAAC,CAAC;QACzF,IAAI,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAClD,IAAI,GAAG,GAAG,UAAU,CAAC,WAAW,EAAC,QAAQ,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;QAC5D,IAAI,CAAC,GAAG,IAAI,OAAO,CAAC,UAAS,OAAO,EAAE,MAAM;YACxB,UAAU,CAAC,cAAa,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAC;QAClB,CAAS,CAAC,IAAI,GAAG;YACd,MAAM,CAAC,CAAC,CAAC;QACb,CAAC,CAAA;QACD,MAAM,CAAC,CAAC,CAAC;IACb,CAAC,CAAA;AACL,CAAC;AA3CD,sDA2CC;AAGD,0BAAiC,QAA4B;IACzD,IAAI,OAAO,GAAG,MAAM,CAAC,cAAc,CAAC,4CAA4C,CAAC,CAAC;IAClF,OAAO,CAAC,SAAS,GAAG,gBAAQ,CAAC,oBAAoB,CAAC;IAClD,IAAI,UAAU,GAAG,0BAA0B,CAAC,gBAAgB,EAAC,gBAAQ,CAAC,oBAAoB,CAAC,CAAC;IAC5F,IAAI,SAAS,GAAG,qBAAqB,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;IAC3D,IAAI,MAAM,GAAG,kBAAkB,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;IACrD,IAAI,iBAAiB,GAAG,qBAAqB,CAAC,gBAAQ,CAAC,eAAe,CAAC,CAAC;IACxE,EAAE,CAAC,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACxD,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;IAC7C,CAAC;IACD,IAAI,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,qBAAqB,CAAC,gBAAQ,CAAC,eAAe,CAAC,EAAE,MAAM,CAAE,CAAC;IACxF,eAAe,CAAC,QAAQ,CAAC,CAAC;IAC1B,IAAI,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC;IACzB,MAAM,CAAC,QAAQ,CAAC;AACrB,CAAC;AAdD,4CAcC;AAED,yBAAgC,QAAc;IAC1C,IAAI,OAAO,GAAG,MAAM,CAAC,cAAc,CAAC,4CAA4C,CAAC,CAAC;IAClF,QAAQ,CAAE,MAAK,kCAAkC,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;IAC7E,OAAO,CAAC,SAAS,GAAG,gBAAQ,CAAC,oBAAoB,CAAC;IAClD,IAAI,UAAU,GAAG,0BAA0B,CAAC,gBAAgB,EAAC,gBAAQ,CAAC,oBAAoB,CAAC,CAAC;IAC5F,IAAI,SAAS,GAAG,qBAAqB,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;IAE3D,QAAQ,CAAE,MAAI,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,EAAC,SAAS,EAAC,CAAC,CAAC,CAAC,CAAC;IACvE,QAAgB,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;IAC3C,IAAI,MAAM,GAAG,kBAAkB,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;IACrD,+BAA+B;IAC/B,2DAA2D;IAC3D,sCAAsC;IACtC,2CAA2C;IAC3C,6EAA6E;IAC7E,IAAI,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,qBAAqB,CAAC,gBAAQ,CAAC,eAAe,CAAC,EAAE,MAAM,CAAE,CAAC;IACxF,eAAe,CAAC,QAAQ,CAAC,CAAC;IAC1B,kCAAkC;IAClC,IAAI,OAAO,GAAG,sBAAsB,CAAC,QAAQ,CAAC,CAAC,CAAC,qFAAqF;IAErI,QAAQ,CAAE,MAAK,wBAAwB,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;IACnE,QAAQ,CAAE,MAAI,0BAA0B,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;IACtE,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC;QACf,0BAA0B,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,IAAI,CAAE,MAChD,QAAQ,CAAC,gBAAgB,CAAE,EAAE,SAAS,EAAI,gBAAQ,CAAC,oBAAoB,EAAC,EAAE,OAAO,EAAE;YAC/E,MAAM,EAAG,IAAI;SAChB,CAAC,CACL;QACD,0BAA0B,CAAC,OAAO,EAAC,SAAS,CAAC,CAAC,IAAI,CAAE,MAChD,OAAO,CAAC,gBAAgB,CAAE,EAAE,SAAS,EAAI,gBAAQ,CAAC,oBAAoB,EAAC,EAAE,SAAS,EAAE;YAChF,MAAM,EAAG,IAAI;SAChB,CAAC,CACL;KAAC,CAAC,CAAC,CAAC,iCAAiC;AAC9C,CAAC;AAjCD,0CAiCC;AAGD,4BAAmC,QAA4B,EAAG,SAAkB;IAChF,MAAM,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,IAAI,CACjC,YAAY,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,EAAE,SAAS,CAAC,CACpD,CAAC;AACN,CAAC;AAJD,gDAIC;AAGD,yDAAyD;AAEzD,sBAA6B,QAAc,EAAE,KAA0B,EAAE,aAAwB;IAC7F,0DAA0D;IAC1D,4DAA4D;IAC5D,MAAM,CAAE,KAAK,CAAC,SAAS,CAAC,EAAC,QAAQ,EAAG,EAAE,SAAS,EAAG,CAAC,EAAE,EAAC,CAAS,CAAC,IAAI,CAAE,CAAC,CAAC,KACpE,CAAC,CAAC,GAAG,CAAC,CAAC,IAAK,CAAS,CAAC,SAAmB,CAAC,CAC7C,CAAC,IAAI,CAAE,CAAC,UAAgB;QACrB,QAAQ,CAAC,kBAAkB,GAAG,UAAU,CAAC,MAAM,GAAG,GAAG,GAAG,UAAU,CAAC,CAAC;QACpE,IAAI,KAAK,GAAG,CAAC,CAAC,UAAU,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;QACpD,QAAQ,CAAC,kBAAkB,GAAG,KAAK,CAAC,MAAM,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC;QAC1D,EAAE,CAAA,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YACpB,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACjC,CAAC;QACD,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAE,SAAS,IAAK,KAAK,CAAC,MAAc,CAAC,EAAE,SAAS,EAAG,SAAS,EAAC,CAAC,CAAC,CAAC,CAAC;IACjG,CAAC,CAAC,CAAC;AACP,CAAC;AAdD,oCAcC;AACD,IAAI,eAAe,GAAG,EAAE,SAAS,EAAG,EAAE,EAAE,QAAQ,EAAG,EAAE,EAAC,CAAC;AAEvD,IAAI,aAAa,GAAG,EAAE,OAAO,EAAG,CAAC;YAC7B,IAAI,EAAG,MAAM;SAChB,CAAC;CACD,CAAC;AAEF,iCAAwC,QAA2B;IAC/D,EAAE,CAAA,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9C,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IACpC,CAAC;IAAC,IAAI,CAAC,CAAC;QACJ,MAAM,CAAC,eAAe,CAAC,QAAQ,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,QAAQ,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;IACzF,CAAC;AACL,CAAC;AAND,0DAMC;AAED,mCAA0C,QAA2B;IACjE,EAAE,CAAA,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAChD,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;IACtC,CAAC;IAAC,IAAI,CAAC,CAAC;QACJ,MAAM,CAAC,eAAe,CAAC,QAAQ,CAAC,KAAK,CAAC,UAAU,EAAE,IAAI,QAAQ,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;IAC7F,CAAC;AACL,CAAC;AAND,8DAMC;AAED,0BAAkC,QAA4B;IAC1D,IAAI,WAAW,GAAG,uBAAuB,CAAC,QAAQ,CAAC,CAAC;IACpD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,CAAE,CAAC,IAAY;QACzD,EAAE,CAAA,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YACnB,MAAM,IAAI,KAAK,CAAC,uCAAuC,CAAC,CAAC;QAC7D,CAAC;QAAA,CAAC;QACF,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,CAAC;AACP,CAAC;AARD,4CAQC;AAGD,4BAAoC,QAA4B;IAC5D,IAAI,aAAa,GAAG,yBAAyB,CAAC,QAAQ,CAAC,CAAC;IACxD,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,CAAE,CAAC,IAAY;QAC3D,EAAE,CAAA,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YACnB,MAAM,IAAI,KAAK,CAAC,uCAAuC,CAAC,CAAC;QAC7D,CAAC;QAAA,CAAC;QACF,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,CAAC;AACP,CAAC;AARD,gDAQC;AAED,kCAAyC,QAA4B,EAAE,SAAkB;IACrF,IAAI,iBAAiB,GAAG,qBAAqB,CAAC,SAAS,CAAC,CAAC;IACzD,IAAI,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,mBAAW,CAAC,kCAAkC,CAAC,CAAC;IAC9E,IAAI,GAAG,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAE,SAAS,EAAG,SAAS,EAAC,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG;QACrE,QAAQ,CAAE,MAAK,kBAAkB,SAAS,aAAc,GAAW,CAAC,MAAM,mBAAmB;cAC1F,GAAW,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,EAAE,GAAI,GAAW,CAAC,CAAC,CAAC,CAAC,cAAc,CAAE,CAAC;QACpE,QAAQ,CAAC,MAAM,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;QACxD,EAAE,CAAA,CAAE,GAAW,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YAC3B,MAAM,KAAK,CAAC,QAAQ,GAAG,SAAS,GAAG,qBAAqB,GAAG,mBAAW,CAAC,kCAAkC,CAAC,CAAC;QAC/G,CAAC;QACD,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC,CAAC,CAAC;IACH,kCAAkC;IAClC,MAAM,CAAC,GAAG,CAAC;IACd,4EAA4E;AAC7E,CAAC;AAfD,4DAeC;AAGD,2BAAkC,QAA4B,EAAE,SAAkB;IAC9E,IAAI,iBAAiB,GAAG,qBAAqB,CAAC,SAAS,CAAC,CAAC;IACzD,IAAI,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,mBAAW,CAAC,kCAAkC,CAAC,CAAC;IAC9E,MAAM,CAAC,eAAe,CAAC,QAAQ,EAAE,gBAAQ,CAAC,oBAAoB,CAAC,CAAC,IAAI,CAChE,CAAC,KAAK,KAAK,KAAK,CAAC,IAAI,CAAC,EAAE,SAAS,EAAG,SAAS,EAAC,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAChE,CAAC,IAAI,CAAC,CAAC,GAAG;QAEH,QAAQ,CAAE,MAAK,iFAAiF;cAC7F,GAAW,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,GAAG,GAAI,GAAW,CAAC,CAAC,CAAC,CAAC,cAAc,CAAE,CAAC;QACrE,QAAQ,CAAC,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;QAClD,EAAE,CAAA,CAAE,GAAW,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YAC3B,MAAM,KAAK,CAAC,QAAQ,GAAG,SAAS,GAAG,qBAAqB,GAAG,mBAAW,CAAC,kCAAkC,CAAC,CAAC;QAC/G,CAAC;QACD,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC,CACJ,CAAC;IACL,4EAA4E;AAC7E,CAAC;AAjBD,8CAiBC;AAED,yBAAgC,QAA4B,EAAE,SAAkB;IAC5E,IAAI,iBAAiB,GAAG,qBAAqB,CAAC,SAAS,CAAC,CAAC;IACzD,EAAE,CAAA,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACvD,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC;IAC9D,CAAC;IACD,QAAQ,CAAE,MAAI,2BAA2B,GAAG,QAAQ,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAC9E,IAAI,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,mBAAW,CAAC,kCAAkC,CAAC,CAAC;IAC9E,QAAQ,CAAE,MAAI,iBAAiB,GAAG,SAAS,CAAC,CAAC;IAC7C,IAAI,GAAG,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAE,SAAS,EAAG,SAAS,EAAC,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG;QACtE,QAAQ,CAAE,MAAI,qBAAqB,SAAS,aAAc,GAAW,CAAC,MAAM,mBAAmB;cACvF,GAAW,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,GAAG,GAAI,GAAW,CAAC,CAAC,CAAC,CAAC,cAAc,CAAE,CAAC;QACzE,QAAQ,CAAE,MAAI,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;QACvD,EAAE,CAAA,CAAE,GAAW,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YAC3B,MAAM,KAAK,CAAC,QAAQ,GAAG,SAAS,GAAG,qBAAqB,GAAG,mBAAW,CAAC,kCAAkC,CAAC,CAAC;QAC/G,CAAC;QACD,QAAQ,CAAC,MAAK,sBAAsB,GAAG,SAAS,GAAG,QAAQ,CAAC,CAAC;QAC7D,8BAA8B;QAE9B,IAAI,MAAM,GAAG,kBAAkB,CAAC,GAAG,CAAC,CAAC,CAAoB,EAAC,QAAQ,CAAC,CAAC;QACpE,EAAE,CAAA,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACvD,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC;QAC9D,CAAC;QACD,IAAI,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,iBAAiB,EAAE,MAAM,CAAC,CAAC;QACtD,eAAe,CAAC,KAAK,CAAC,CAAC;QACvB,QAAQ,CAAE,MAAK,mBAAmB,GAAG,SAAS,GAAG,GAAG,GAAE,OAAO,KAAK,CAAC,CAAC;QACpE,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IAClC,CAAC,CAAC,CAAC;IACH,kCAAkC;IAClC,MAAM,CAAC,GAAG,CAAC;IACd,4EAA4E;AAC7E,CAAC;AA9BD,0CA8BC;AAED,uBAA8B,QAA2B,EAAE,SAAiB;IACxE,IAAI,WAAW,GAAG,uBAAuB,CAAC,QAAQ,CAAC,CAAC;IACpD,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC;QACnC,IAAI,OAAO,GAAG,MAAM,CAAC,cAAc,CAAC,IAAI,GAAG,SAAS,GAAG,cAAc,CAAC,CAAC;QACnE,MAAM,CAAC,IAAI,WAAW,CAAC,EAAE,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC,IAAI,EAAE,CAAC;IACvD,CAAC,CAAC,CAAC;AACP,CAAC;AAND,sCAMC;AACD,yBAAgC,QAA2B,EAAE,SAAiB;IAC1E,IAAI,WAAW,GAAG,yBAAyB,CAAC,QAAQ,CAAC,CAAC;IACtD,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC;QACnC,IAAI,SAAS,GAAG,MAAM,CAAC,cAAc,CAAC,IAAI,GAAG,SAAS,GAAG,iBAAiB,CAAC,CAAC;QAC5E,MAAM,CAAC,IAAI,WAAW,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,CAAC;IACzC,CAAC,CAAC,CAAC;AACP,CAAC;AAND,0CAMC;AAID,sBAA6B,QAA4B,EAAE,SAAiB;IACxE,IAAI,UAAU,GAAG,cAAc,CAAC,SAAS,CAAC,CAAC;IAC3C,IAAI,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,mBAAW,CAAC,kCAAkC,CAAC,CAAC;IAC9E,IAAI,SAAS,GAAG,QAAQ,CAAC,KAAK,CAAC,mBAAW,CAAC,6BAA6B,CAAC,CAAC;IAC1E,QAAQ,CAAC,kBAAkB,GAAG,UAAU,CAAC,CAAC;IAC1C,MAAM,CAAC,YAAY,CAAC,QAAQ,EAAE,QAAQ,EAAE,CAAC,gBAAQ,CAAC,oBAAoB,CAAC,CAAE,CAAC,IAAI,CAAE,MAC5E,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,CAAE,CAAC,SAAS;QAClC,QAAQ,CAAC,aAAa,GAAG,SAAS,CAAC,CAAC;QACpC,IAAI,QAAQ,GAAG,YAAY,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;QAClD,IAAI,SAAS,GAAG,0BAA0B,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;QACjE,IAAI,UAAU,GAAG,qBAAqB,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;QAC5D,QAAQ,CAAC,qBAAqB,SAAS,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC;QACvF,IAAI,EAAE,GAAG,QAAQ,CAAC,gBAAgB,CAAE,EAAE,SAAS,EAAG,SAAS,EAAE,EAAE,UAAU,EAAE;YACvE,MAAM,EAAG,IAAI;SAChB,CAAC,CAAC;QACH,QAAQ,CAAC,mBAAmB,SAAS,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;QACnF,IAAI,EAAE,GAAG,SAAS,CAAC,gBAAgB,CAAE,EAAE,SAAS,EAAG,SAAS,EAAE,EAAE,QAAQ,EAAE;YACtE,MAAM,EAAG,IAAI;SAChB,CAAC,CAAC;QACH,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,EAAC,EAAE,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,CACD,CACJ,CAAC,IAAI,CAAE;QACJ,IAAI,kBAAkB,GAAG,UAAU,CAAC,KAAK,EAAE,CAAC;QAC5C,kBAAkB,CAAC,IAAI,CAAC,gBAAQ,CAAC,oBAAoB,CAAC,CAAC;QACvD,QAAQ,CAAC,0BAA0B,CAAC,CAAC;QACrC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC;YACf,YAAY,CAAC,QAAQ,EAAE,QAAQ,EAAE,kBAAkB,CAAE;YACrD,YAAY,CAAC,QAAQ,EAAE,SAAS,EAAE,kBAAkB,CAAE;SACzD,CAAC,CAAC;IACP,CAAC,CAAC,CAAC,IAAI,CAAE;QACJ,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC;YAChB,aAAa,CAAC,QAAQ,EAAC,SAAS,CAAC;YACjC,eAAe,CAAC,QAAQ,EAAE,SAAS,CAAC;SACtC,CAAC,CAAA;IACP,CAAC,CAAC,CAAA;AACN,CAAC;AApCD,oCAoCC;AAED,2BAAkC,QAAc;IAC5C,MAAM,CAAC,IAAI,OAAO,CAAC,UAAS,MAAM,EAAE,OAAO;QACvC,QAAQ,CAAC,UAAU,CAAC,EAAE,CAAC,eAAe,EAAE,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,KAAK;YAExD,EAAE,CAAA,CAAC,GAAG,CAAC,CAAC,CAAC;gBACL,MAAM,CAAC,GAAG,CAAC,CAAC;gBACZ,MAAM,CAAC;YACX,CAAC;YACD,EAAE,CAAA,CAAC,KAAK,CAAC,OAAO,CAAC,gBAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC9C,OAAO,CAAC,IAAI,CAAC,CAAC;YAClB,CAAC;YACD,MAAM,CAAC,mBAAmB,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;AACP,CAAC;AAdD,8CAcC;AAEY,QAAA,QAAQ,GAAG;IACpB,oBAAoB,EAAG,YAAY;IACnC,eAAe,EAAG,YAAY;IAC9B,oBAAoB,EAAG,mBAAmB;CAC7C,CAAC;AAGW,QAAA,WAAW,GAAG;IACvB,kCAAkC,EAAG,qBAAqB,CAAC,gBAAQ,CAAC,oBAAoB,CAAC;IACzF,6BAA6B,EAAG,qBAAqB,CAAC,gBAAQ,CAAC,eAAe,CAAC;CAClF,CAAC;AAEF,gCAAuC,QAAc,EAAE,SAAiB,EAAE,SAAkB;IACxF,4CAA4C;IAC5C,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC;QACf,QAAQ,CAAC,UAAU,CAAC,EAAE,CAAC,gBAAQ,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,EAAE,SAAS,EAAG,SAAS,EAAC,CAAC;QAC/E,QAAQ,CAAC,UAAU,CAAC,EAAE,CAAC,gBAAQ,CAAC,oBAAoB,CAAC,CAAC,IAAI,CAAC,EAAE,SAAS,EAAG,SAAS,EAAC,CAAC;KACvF,CAAC,CAAC,IAAI,CAAC,GAAG;QACP,IAAI,QAAQ,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;QACtB,IAAI,cAAc,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;QAC5B,IAAI,MAAM,GAAG,kBAAkB,CAAC,cAAc,CAAC,CAAC;QAChD,IAAI,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC;QAC5D,MAAM,CAAC;YACH,cAAc,EAAG,QAAQ,CAAC,cAAc;YACxC,QAAQ,EAAG,QAAQ;YACnB,MAAM,EAAG,kBAAkB,CAAC,cAAc,CAAC;YAC3C,KAAK,EAAG,KAAK;SACH,CAAC;IACnB,CAAC,CAAC,CAAC;AACP,CAAC;AAjBD,wDAiBC;AAED;;;;;;;;;;;;;;;EAeE;AAGF,6BAAoC,QAA4B,EAAE,cAAc,EAAE,MAAwB,EAAE,GAAS;IACjH,IAAI,QAAQ,CAAC;IACb,kDAAkD;IAClD,EAAE,CAAA,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACpD,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;IAC9C,CAAC;IAAC,IAAI,CAAC,CAAC;QACJ,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC;IAEtD,CAAC;IACD,MAAM,CAAC,0BAA0B,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;AACrD,CAAC;AAVD,kDAUC;AAED,oCAA2C,KAAK,EAAE,GAAS;IACvD,MAAM,CAAC,IAAI,OAAO,CAAM,CAAC,OAAO,EAAC,MAAM;QACnC,IAAI,MAAM,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;QAC5B,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG;YAChB,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACN,mBAAmB;gBACnB,MAAM,CAAC,GAAG,CAAC,CAAC;YAChB,CAAC;YACL,IAAI,CAAC,CAAC;gBACF,OAAO,CAAC,MAAM,CAAC,CAAC;YACpB,CAAC;QACD,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;AACP,CAAC;AAbD,gEAaC;AAED,qBAA4B,cAAsB,EAAE,MAAwB,EAAE,GAAS;IACrF,IAAI,WAAW,GAAI,MAAc,CAAC,UAAU,EAAE,CAAC;IAC/C,IAAI,UAAU,GAAG,CAAC,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;IAC1C,iBAAiB,CAAC,UAAU,EAAE,UAAS,GAAG,EAAC,GAAG,EAAC,GAAG;QAChD,EAAE,CAAA,CAAC,GAAG,KAAK,YAAY,IAAI,GAAG,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC;YAC/C,mCAAmC;YACnC,GAAG,CAAC,oBAAoB,GAAG,KAAK,CAAC;QACrC,CAAC;IACL,CAAC,CAAC,CAAC;IAED,sDAAsD;IACtD,IAAI,SAAS,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC;IAChD,IAAI,CAAC,GAAG,IAAI,SAAS,EAAE,CAAC;IACxB,sDAAsD;IACtD,IAAI,SAAS,GAAG,CAAC,CAAC,QAAQ,CAAC,GAAG,EAAC,UAAU,CAAC,CAAC;IAC3C,EAAE,CAAA,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;QACzB,MAAM,IAAI,KAAK,CAAC,6BAA6B,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,EAAC,SAAS,EAAC,CAAC,CAAC,CAAC,CAAC;IAClG,CAAC;IACD,MAAM,CAAC,IAAI,CAAC;AACd,CAAC;AAnBD,kCAmBC","file":"modelload/schemaload.js","sourcesContent":["/**\r\n * Functionality managing the match models\r\n *\r\n * @file\r\n */\r\n\r\n//import * as intf from 'constants';\r\nimport * as debug from 'debugf';\r\n\r\nvar debuglog = debug('schemaload');\r\n\r\n//const loadlog = logger.logger('modelload', '');\r\n\r\nimport *  as IMatch from '../match/ifmatch';\r\n//import * as InputFilterRules from '../match/rule';\r\n//import * as Tools from '../match/tools';\r\nimport * as fs from 'fs';\r\nimport * as Meta from '../model/meta';\r\nimport * as FUtils from '../model/model';\r\nimport * as Utils from 'abot_utils';\r\n//import * as CircularSer from 'abot_utils';\r\n//import * as Distance from 'abot_stringdist';\r\nimport * as process from 'process';\r\nimport * as _ from 'lodash';\r\nimport * as mongoose from 'mongoose';\r\n\r\n(mongoose as any).Promise = global.Promise;\r\n\r\n/**\r\n * WATCH out, this instruments mongoose!\r\n */\r\nrequire('mongoose-schema-jsonschema')(mongoose);\r\n/**\r\n * the model path, may be controlled via environment variable\r\n */\r\nvar envModelPath = process.env[\"ABOT_MODELPATH\"] || \"node_modules/abot_testmodel/testmodel\";\r\n\r\nexport function cmpTools(a: IMatch.ITool, b: IMatch.ITool) {\r\n  return a.name.localeCompare(b.name);\r\n}\r\n\r\n\r\ntype IModel = IMatch.IModel;\r\n\r\nconst ExtendedSchema_props = {\r\n    \"modelname\": {\r\n      \"type\": String,\r\n      \"trim\": true,\r\n      \"required\" : true\r\n    },\r\n    \"domain\": {\r\n      \"type\": String,\r\n      \"trim\": true,\r\n      \"required\" : true\r\n    },\r\n    \"mongoosemodelname\": {\r\n      \"type\": String,\r\n      \"trim\": true,\r\n      \"required\" : true\r\n    },\r\n    \"collectionname\": {\r\n      \"type\": String,\r\n      \"trim\": true,\r\n      \"required\" : true\r\n    },\r\n    \"props\" : {},\r\n    \"index\" : {}\r\n};\r\nconst ExtendedSchema_index = {\r\n    \"modelname\" : \"text\"\r\n};\r\n\r\n\r\n\r\n// load the models\r\n\r\nexport function loadModelNames(modelPath : string) : string[] {\r\n  modelPath = modelPath || envModelPath;\r\n  var mdls = FUtils.readFileAsJSON('./' + modelPath + '/models.json');\r\n  mdls.forEach(name => {\r\n    if(name !== makeMongoCollectionName(name)) {\r\n        throw new Error('bad modelname, must terminate with s and be lowercase');\r\n    }\r\n  })\r\n  return mdls;\r\n}\r\n\r\nexport interface IRawSchema {\r\n    props: any[],\r\n    index : any\r\n}\r\n\r\nexport interface IModelDocCategoryRec {\r\n    category : string,\r\n    category_description : string,\r\n    QBEColumnProps : {\r\n        \"defaultWidth\": number,\r\n        \"QBE\": boolean,\r\n        \"LUNRIndex\": boolean\r\n      },\r\n      \"category_synonyms\": string[],\r\n    wordindex : boolean,\r\n    exactmatch: boolean\r\n};\r\n\r\nexport interface IModelDoc {\r\n    domain : string,\r\n    modelname? : string,\r\n    collectionname? : string,\r\n    domain_description : string\r\n    _categories : IModelDocCategoryRec[],\r\n    columns: string[],\r\n    domain_synonyms : string[]\r\n\r\n}\r\n\r\nexport interface IExtendedSchema extends IRawSchema{\r\n    domain : string,\r\n    modelname : string,\r\n    mongoosemodelname : string,\r\n    collectionname : string\r\n};\r\n\r\nexport function mapType(val : string) : any {\r\n    if(val === \"String\") {\r\n        return String;\r\n    }\r\n    if(val === \"Boolean\") {\r\n        return Boolean;\r\n    }\r\n    if(val === \"Number\") {\r\n        return Number;\r\n    }\r\n    throw new Error(\" illegal type \" + val + \" expected String, Boolean, Number, ...\");\r\n}\r\n\r\nexport function replaceIfTypeDeleteM(obj : any, val : any, key : string) {\r\n    if(key.substr(0,3) === \"_m_\") {\r\n        delete obj[key];\r\n        return;\r\n    };\r\n    if(key === \"type\" && typeof val === \"string\") {\r\n        var r = mapType(val);\r\n        obj[key] = r;\r\n    }\r\n}\r\n\r\nfunction traverseExecuting(obj, fn ) {\r\n    _.forIn(obj, function (val, key) {\r\n    //    console.log(val + \" -> \" + key + \" \");\r\n        fn(obj,val,key);\r\n        if (_.isArray(val)) {\r\n            val.forEach(function(el) {\r\n                if (_.isObject(el)) {\r\n                    traverseExecuting(el,fn);\r\n                }\r\n            });\r\n        }\r\n        if (_.isObject(val)) {\r\n            traverseExecuting(obj[key],fn);\r\n        }\r\n    });\r\n}\r\n\r\nfunction traverseReplacingType(obj) {\r\n    return traverseExecuting(obj,replaceIfTypeDeleteM);\r\n    /*\r\n    _.forIn(obj, function (val, key) {\r\n    //    console.log(val + \" -> \" + key + \" \");\r\n        replaceIfTypeDeleteM(obj,val,key);\r\n        if (_.isArray(val)) {\r\n            val.forEach(function(el) {\r\n                if (_.isObject(el)) {\r\n                    traverseReplacingType(el);\r\n                }\r\n            });\r\n        }\r\n        if (_.isObject(val)) {\r\n            traverseReplacingType(obj[key]);\r\n        }\r\n    });\r\n    */\r\n}\r\n\r\nexport function typeProps(a : any) : any {\r\n   var aCloned = _.cloneDeep(a);\r\n   //console.log(JSON.stringify(aCloned, undefined, 2));\r\n   traverseReplacingType(aCloned);\r\n   return aCloned;\r\n}\r\n\r\nexport function makeMongooseSchema( extSchema : IExtendedSchema , mongo? : any) : mongoose.Schema {\r\n    var typedProps = typeProps(extSchema.props);\r\n    var mongo = mongo || mongoose;\r\n     var schema = mongo.Schema(extSchema.props); //{ props : extSchema.props, index : extSchema.index  });\r\n     schema.index(extSchema.index);\r\n     return schema;\r\n}\r\n\r\nexport function loadExtendedMongooseSchema(modelPath: string, modelName : string): IExtendedSchema {\r\n  var schemaSer = FUtils.readFileAsJSON('./' + modelPath + '/' + modelName + '.model.mongooseschema.json');\r\n  schemaSer.modelName = modelName;\r\n  return schemaSer;\r\n}\r\n\r\nexport function loadModelDoc(modelPath: string, modelName : string): IModelDoc {\r\n  var docSer = FUtils.readFileAsJSON('./' + modelPath + '/' + modelName + '.model.doc.json');\r\n  docSer.modelname = modelName;\r\n  return docSer;\r\n}\r\n\r\nvar aPromise = global.Promise;\r\n\r\nexport interface IModelRec  {\r\n    collectionName : string,\r\n    model : mongoose.Model<any>,\r\n    schema : mongoose.Schema\r\n};\r\n\r\n\r\nexport function augmentMongooseSchema( modelDoc : IModelDoc, schemaRaw : IRawSchema) : IExtendedSchema {\r\n    debuglog( ()=>'augmenting for ' + modelDoc.modelname);\r\n    var res = { domain : modelDoc.domain,\r\n        modelname : modelDoc.modelname,\r\n        mongoosemodelname : makeMongooseModelName(modelDoc.modelname),\r\n        collectionname : makeMongoCollectionName(modelDoc.modelname)\r\n     } as IExtendedSchema;\r\n    return (Object as any).assign(res, schemaRaw);\r\n}\r\n\r\n/**\r\n * return a modelname without a traling s\r\n * @param collectionName\r\n */\r\nexport function makeMongooseModelName(collectionName : string) : string {\r\n    if(collectionName !== collectionName.toLowerCase()) {\r\n        throw new Error('expect lowercase, was ' + collectionName);\r\n    }\r\n    if (collectionName.charAt(collectionName.length-1) === 's') {\r\n        return collectionName.substring(0,collectionName.length-1);\r\n    }\r\n    throw new Error('expected name with trailing s');\r\n}\r\n\r\n/**\r\n * returns a mongoose collection name\r\n * @param modelName\r\n */\r\nexport function makeMongoCollectionName(modelName : string) : string {\r\n    if(modelName !== modelName.toLowerCase()) {\r\n        throw new Error('expect lowercase, was ' + modelName);\r\n    }\r\n    if (modelName.charAt(modelName.length-1) !== 's') {\r\n        return modelName + 's';\r\n    }\r\n    return modelName;\r\n}\r\n\r\nexport function getExtendedSchema(mongoose : any) : mongoose.Schema {\r\n  var extendSchema = mongoose.Schema(ExtendedSchema_props);\r\n    //console.log(\"now extended schema\");\r\n    extendSchema.index(ExtendedSchema_index);\r\n    return extendSchema;\r\n    //console.log('creating model 2');\r\n}\r\n\r\nexport function getExtendedSchemaModel(mongoose : mongoose.Mongoose) : mongoose.Model<any> {\r\n    var mgModelName = makeMongooseModelName(MongoNLQ.COLL_EXTENDEDSCHEMAS)\r\n    if(mongoose.modelNames().indexOf(mgModelName) >= 0) {\r\n        return mongoose.model(mgModelName);\r\n    }\r\n    var extendSchema = getExtendedSchema(mongoose);\r\n    var modelES = mongoose.model(makeMongooseModelName(MongoNLQ.COLL_EXTENDEDSCHEMAS), extendSchema);\r\n    instrumentModel(modelES);\r\n    return modelES;\r\n}\r\n\r\nexport function instrumentModel(model : mongoose.Model<any>) {\r\n    return model;\r\n    /*\r\n    if(process.env.MONGO_RECORD && process.env.MONGO_REPLAY) {\r\n        console.log('set only one of MONGO_RECORD MONGO_REPLAY');\r\n        process.exit(-1);\r\n    }\r\n    if (process.env.MONGO_RECORD) {\r\n        instrumentModelRecord(model);\r\n    } else if (process.env.MONGO_REPLAY) {\r\n        // todo\r\n        instrumentModelReplay(model);\r\n    }\r\n    return model;\r\n    */\r\n}\r\n\r\nvar crypto = require('crypto');\r\n\r\n\r\nexport function recordOp(op : string, name : string, query : any, res : any) {\r\n    var md5sum = crypto.createHash('md5');\r\n    debuglog('here the name ' + name);\r\n\r\n    md5sum.update(op + name + JSON.stringify(query));\r\n    var digest = md5sum.digest('hex');\r\n    fs.writeFileSync('mgrecord/data/' + digest, JSON.stringify(res,undefined,2));\r\n\r\n    var known = {};\r\n    try {\r\n        known = FUtils.readFileAsJSON('mgrecord/queries.json');\r\n    } catch(ex) {\r\n\r\n    }\r\n    known[digest] = { op : op,\r\n                name : name,\r\n                digest : digest,\r\n                query : query,\r\n            res : res};\r\n    fs.writeFileSync('mgrecord/queries.json',JSON.stringify(known,undefined,2));\r\n}\r\n\r\nexport function retrieveOp(op : string, name : string, query : any) {\r\n    var md5sum = crypto.createHash('md5');\r\n    md5sum.update(op + name + JSON.stringify(query));\r\n    var digest = md5sum.digest('hex');\r\n    var res = FUtils.readFileAsJSON('mgrecord/data/' + digest);\r\n    return res;\r\n}\r\n\r\nexport function instrumentModelRecord(modelDoc : mongoose.Model<any>) {\r\n    console.log('instrumenting model ' + modelDoc.modelName);\r\n    var oFind = modelDoc.find;\r\n    modelDoc.find = function() : any {\r\n        debuglog('someone is calling find with ' + modelDoc.modelName   + JSON.stringify(arguments,undefined,2));\r\n        var res = oFind.apply(modelDoc, arguments);\r\n        if(arguments.length !== 1) {\r\n            throw Error('expected one arguments in find, was ' + arguments.length);\r\n        }\r\n        var query = arguments[0];\r\n        res.lean().exec().then( (a) => {\r\n            //console.log(\"here result1 + \" + JSON.stringify(a, undefined,2) );\r\n            recordOp(\"find\",modelDoc.modelName, query, a);\r\n        }\r\n        );\r\n        return res;\r\n    }\r\n     var oDistinct = modelDoc.distinct;\r\n    modelDoc.distinct = function() : any {\r\n        debuglog('someone is calling distinct with'  + JSON.stringify(arguments,undefined,2));\r\n        var res = oDistinct.apply(modelDoc, arguments);\r\n        if(arguments.length !== 1) {\r\n            throw Error('expected on arguments');\r\n        }\r\n        var query = arguments[0];\r\n        res.then( (a) => {\r\n           // console.log(\"here result1 + \" + JSON.stringify(a, undefined,2) );\r\n            recordOp(\"distinct\",modelDoc.modelName, query, a);\r\n        }\r\n        );\r\n        return res;\r\n    }\r\n     var oAggregate = modelDoc.aggregate;\r\n     modelDoc.aggregate = function() : any {\r\n        debuglog(() => 'someone is calling aggregate with'  + JSON.stringify(arguments,undefined,2));\r\n        var query = Array.prototype.slice.call(arguments);\r\n        var res = oAggregate.apply(modelDoc, arguments);\r\n        res.then( (a) => {\r\n           debuglog(() =>\"here result1 + \" + JSON.stringify(a, undefined,2) );\r\n            recordOp(\"aggregate\",modelDoc.modelName, query, a);\r\n        }\r\n        );\r\n        return res;\r\n    }\r\n}\r\n\r\nexport function instrumentModelReplay(modelDoc : mongoose.Model<any>) {\r\n    debuglog('instrumenting model ' + modelDoc.modelName);\r\n    var oFind = modelDoc.find;\r\n    modelDoc.find = function() : any {\r\n        debuglog(() => 'someone is replaying find with'  + JSON.stringify(arguments,undefined,2));\r\n        var query = arguments[0];\r\n        var res = retrieveOp(\"find\",modelDoc.modelName, query);\r\n        debuglog( ()=> 'returning res ' + JSON.stringify(res) + ' for query find' + query);\r\n        return {\r\n            lean : function() {\r\n                return {\r\n                    exec : function() {\r\n                        return new Promise(function(resolve, reject) {\r\n                            setTimeout(function() { resolve(res); },0);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    var oDistinct = modelDoc.distinct;\r\n    modelDoc.distinct = function() : any {\r\n        debuglog('someone is replaying distinct with'  + JSON.stringify(arguments,undefined,2));\r\n        var query = arguments[0];\r\n        var res = retrieveOp(\"distinct\",modelDoc.modelName, query);\r\n        debuglog('returning res ' + JSON.stringify(res) + ' for query find' + query);\r\n        return new Promise(function(resolve, reject) {\r\n                            setTimeout(function() { resolve(res); },0);\r\n                        });\r\n    }\r\n     var oAggregate = modelDoc.aggregate;\r\n     modelDoc.aggregate = function() : any {\r\n        debuglog('someone is replaying aggregate with'  + JSON.stringify(arguments,undefined,2));\r\n        var query = Array.prototype.slice.call(arguments);\r\n        var res = retrieveOp(\"aggregate\",modelDoc.modelName, query);\r\n        var p = new Promise(function(resolve, reject) {\r\n                            setTimeout(function() { resolve(res); },0);\r\n                        });\r\n        (p as any).exec = function() {\r\n            return p;\r\n        }\r\n        return p;\r\n    }\r\n}\r\n\r\n\r\nexport function getModelDocModel(mongoose : mongoose.Mongoose) : mongoose.Model<any> {\r\n    var metaDoc = FUtils.readFileAsJSON('./resources/meta/metamodels.model.doc.json');\r\n    metaDoc.modelname = MongoNLQ.MODELNAME_METAMODELS;\r\n    var schemaSer2 = loadExtendedMongooseSchema('resources/meta',MongoNLQ.MODELNAME_METAMODELS);\r\n    var schemaSer = augmentMongooseSchema(metaDoc, schemaSer2);\r\n    var schema = makeMongooseSchema(schemaSer, mongoose);\r\n    var mongooseModelName = makeMongooseModelName(MongoNLQ.COLL_METAMODELS);\r\n    if (mongoose.modelNames().indexOf(mongooseModelName) >= 0) {\r\n        return mongoose.model(mongooseModelName);\r\n    }\r\n    var modelDoc = mongoose.model(makeMongooseModelName(MongoNLQ.COLL_METAMODELS), schema );\r\n    instrumentModel(modelDoc);\r\n    var oFind = modelDoc.find;\r\n     return modelDoc;\r\n}\r\n\r\nexport function upsertMetaModel(mongoose : any) {\r\n    var metaDoc = FUtils.readFileAsJSON('./resources/meta/metamodels.model.doc.json');\r\n    debuglog( ()=> \"here metaDoc to insert as loaded\" + JSON.stringify(metaDoc));\r\n    metaDoc.modelname = MongoNLQ.MODELNAME_METAMODELS;\r\n    var schemaSer2 = loadExtendedMongooseSchema('resources/meta',MongoNLQ.MODELNAME_METAMODELS);\r\n    var schemaSer = augmentMongooseSchema(metaDoc, schemaSer2);\r\n\r\n    debuglog( ()=>'here schemaser' + JSON.stringify(schemaSer,undefined,2));\r\n    (mongoose as any).Promise = global.Promise;\r\n    var schema = makeMongooseSchema(schemaSer, mongoose);\r\n    //console.log(\"make schema 1\");\r\n    //var extendSchema = mongoose.Schema(ExtendedSchema_props);\r\n    ///console.log(\"now extended schema\");\r\n    //extendSchema.index(ExtendedSchema_index);\r\n    //console.log(\"now document ...\" + JSON.stringify(extendSchema,undefined,2));\r\n    var modelDoc = mongoose.model(makeMongooseModelName(MongoNLQ.COLL_METAMODELS), schema );\r\n    instrumentModel(modelDoc);\r\n    //console.log('creating model 2');\r\n    var modelES = getExtendedSchemaModel(mongoose); //mongoose.model(makeMongooseModelName(MongoNLQ.COLL_EXTENDEDSCHEMAS), extendSchema);\r\n\r\n    debuglog( ()=> \"here metaDoc to insert\" + JSON.stringify(metaDoc));\r\n    debuglog( ()=>\"here schemaser to insert\" + JSON.stringify(schemaSer));\r\n    return Promise.all([\r\n        validateDocVsMongooseModel(modelDoc, metaDoc).then( ()=>\r\n            modelDoc.findOneAndUpdate( { modelname :  MongoNLQ.MODELNAME_METAMODELS}, metaDoc, {\r\n                upsert : true\r\n            })\r\n        ),\r\n        validateDocVsMongooseModel(modelES,schemaSer).then( ()=>\r\n            modelES.findOneAndUpdate( { modelname :  MongoNLQ.MODELNAME_METAMODELS}, schemaSer, {\r\n                upsert : true\r\n            })\r\n        )]); //.then( () => process.exit(-1));\r\n}\r\n\r\n\r\nexport function createDBWithModels(mongoose : mongoose.Mongoose , modelPath : string) : Promise<any> {\r\n    return upsertMetaModel(mongoose).then(\r\n        upsertModels.bind(undefined, mongoose, modelPath)\r\n    );\r\n}\r\n\r\n\r\n//export function getModelNames(model : mongoose.model, )\r\n\r\nexport function removeOthers(mongoose : any, model: mongoose.Model<any>, retainedNames : string[] ) : Promise<any> {\r\n    //console.log('here collectionname' + Object.keys(model));\r\n    //console.log('here collectionname' + model.collectionname);\r\n    return (model.aggregate({$project : { modelname : 1 }}) as any).then( (r) =>\r\n        r.map(o => (o as any).modelname as string)\r\n    ).then( (modelnames : any) => {\r\n        debuglog(\" present models \" + modelnames.length + ' ' + modelnames);\r\n        var delta = _.difference(modelnames, retainedNames);\r\n        debuglog(' spurious models' + delta.length + ' ' + delta);\r\n        if(delta.length === 0) {\r\n            return Promise.resolve(true);\r\n        }\r\n        return Promise.all(delta.map( modelname => (model.remove as any)({ modelname : modelname})));\r\n    });\r\n}\r\nvar SchemaOperators = { operators : {}, synonyms : {}};\r\n\r\nvar SchemaFillers = { fillers : [{\r\n    type : String\r\n}]\r\n};\r\n\r\nexport function getOrCreateModelFillers(mongoose: mongoose.Mongoose) : mongoose.Model<any> {\r\n    if(mongoose.modelNames().indexOf('filler') >= 0) {\r\n        return mongoose.model('filler');\r\n    } else {\r\n        return instrumentModel(mongoose.model('filler', new mongoose.Schema(SchemaFillers)));\r\n    }\r\n}\r\n\r\nexport function getOrCreateModelOperators(mongoose: mongoose.Mongoose) : mongoose.Model<any> {\r\n    if(mongoose.modelNames().indexOf('operator') >= 0) {\r\n        return mongoose.model('operator');\r\n    } else {\r\n        return instrumentModel(mongoose.model('operator', new mongoose.Schema(SchemaOperators)));\r\n    }\r\n}\r\n\r\nexport function getFillersFromDB( mongoose : mongoose.Mongoose) : Promise<any> {\r\n    var fillerModel = getOrCreateModelFillers(mongoose);\r\n    return fillerModel.find({}).lean().exec().then( (vals : any[]) => {\r\n        if(vals.length !== 1) {\r\n            throw new Error('expected exactly one operators entry ');\r\n        };\r\n        return vals[0];\r\n    });\r\n}\r\n\r\n\r\nexport function getOperatorsFromDB( mongoose : mongoose.Mongoose) : Promise<any> {\r\n    var operatorModel = getOrCreateModelOperators(mongoose);\r\n    return operatorModel.find({}).lean().exec().then( (vals : any[]) => {\r\n        if(vals.length !== 1) {\r\n            throw new Error('expected exactly one operators entry ');\r\n        };\r\n        return vals[0];\r\n    });\r\n}\r\n\r\nexport function getExtendSchemaDocFromDB(mongoose : mongoose.Mongoose, modelName : string) : Promise<IExtendedSchema> {\r\n    var mongooseModelName = makeMongooseModelName(modelName);\r\n    var model_ES = mongoose.model(MongooseNLQ.MONGOOSE_MODELNAME_EXTENDEDSCHEMAS);\r\n    var res = model_ES.find({ modelname : modelName}).lean().exec().then((doc) =>\r\n    {   debuglog( ()=> ` loaded Es doc ${modelName} returned ${(doc as any).length} docus from db : `\r\n        + (doc as any)[0].modelname + `` + (doc as any)[0].collectionname );\r\n        debuglog(() => 'here the result' + JSON.stringify(doc));\r\n        if((doc as any).length === 0) {\r\n            throw Error('Model ' + modelName + ' is not present in ' + MongooseNLQ.MONGOOSE_MODELNAME_EXTENDEDSCHEMAS);\r\n        }\r\n        return doc[0];\r\n    });\r\n    //console.log('res' + typeof res);\r\n    return res;\r\n //   return Promise.reject('model ' + modelName + ' cannot be found on db');\r\n}\r\n\r\n\r\nexport function getModelDocFromDB(mongoose : mongoose.Mongoose, modelName : string) : Promise<IModelDoc> {\r\n    var mongooseModelName = makeMongooseModelName(modelName);\r\n    var model_ES = mongoose.model(MongooseNLQ.MONGOOSE_MODELNAME_EXTENDEDSCHEMAS);\r\n    return makeModelFromDB(mongoose, MongoNLQ.MODELNAME_METAMODELS).then(\r\n        (model) => model.find({ modelname : modelName}).lean().exec()\r\n    ).then((doc) =>\r\n        {\r\n            debuglog( ()=> ' loaded Model doc ${modelName} returned ${(doc as any).length} docus from db : '\r\n            + (doc as any)[0].modelname + ` ` + (doc as any)[0].collectionname );\r\n            debuglog('here the result' + JSON.stringify(doc));\r\n            if((doc as any).length === 0) {\r\n                throw Error('Model ' + modelName + ' is not present in ' + MongooseNLQ.MONGOOSE_MODELNAME_EXTENDEDSCHEMAS);\r\n            }\r\n            return doc[0];\r\n        }\r\n    );\r\n //   return Promise.reject('model ' + modelName + ' cannot be found on db');\r\n}\r\n\r\nexport function makeModelFromDB(mongoose : mongoose.Mongoose, modelName : string) : Promise<mongoose.Model<any>> {\r\n    var mongooseModelName = makeMongooseModelName(modelName);\r\n    if(mongoose.modelNames().indexOf(mongooseModelName) >= 0) {\r\n        return Promise.resolve(mongoose.model(mongooseModelName));\r\n    }\r\n    debuglog( ()=>'here present modelnames: ' + mongoose.modelNames().join('\\n'));\r\n    var model_ES = mongoose.model(MongooseNLQ.MONGOOSE_MODELNAME_EXTENDEDSCHEMAS);\r\n    debuglog( ()=>'here modelname:' + modelName);\r\n    var res = model_ES.find({ modelname : modelName}).lean().exec().then((doc) =>\r\n    {  debuglog( ()=>` loaded Model doc ${modelName} returned ${(doc as any).length} docus from db : `\r\n            + (doc as any)[0].modelname + ` ` + (doc as any)[0].collectionname );\r\n        debuglog( ()=>'here the result' + JSON.stringify(doc));\r\n        if((doc as any).length === 0) {\r\n            throw Error('Model ' + modelName + ' is not present in ' + MongooseNLQ.MONGOOSE_MODELNAME_EXTENDEDSCHEMAS);\r\n        }\r\n        debuglog(()=> 'creating schema for ' + modelName + ' from ');\r\n        //  + JSON.stringify(doc[0]));\r\n\r\n        var schema = makeMongooseSchema(doc[0] as IExtendedSchema,mongoose);\r\n        if(mongoose.modelNames().indexOf(mongooseModelName) >= 0) {\r\n            return Promise.resolve(mongoose.model(mongooseModelName));\r\n        }\r\n        var model = mongoose.model(mongooseModelName, schema);\r\n        instrumentModel(model);\r\n        debuglog( ()=> 'returning model: ' + modelName + ` `+ typeof model);\r\n        return Promise.resolve(model);\r\n    });\r\n    //console.log('res' + typeof res);\r\n    return res;\r\n //   return Promise.reject('model ' + modelName + ' cannot be found on db');\r\n}\r\n\r\nexport function uploadFillers(mongoose: mongoose.Mongoose, modelPath: string) : Promise<any> {\r\n    var modelFiller = getOrCreateModelFillers(mongoose);\r\n    return modelFiller.remove({}).then(() => {\r\n    var fillers = FUtils.readFileAsJSON('./' + modelPath + '/filler.json');\r\n        return new modelFiller({ fillers: fillers}).save();\r\n    });\r\n}\r\nexport function uploadOperators(mongoose: mongoose.Mongoose, modelPath: string) : Promise<any> {\r\n    var modelFiller = getOrCreateModelOperators(mongoose);\r\n    return modelFiller.remove({}).then(() => {\r\n    var operators = FUtils.readFileAsJSON('./' + modelPath + '/operators.json');\r\n    return new modelFiller(operators).save();\r\n    });\r\n}\r\n\r\n\r\n\r\nexport function upsertModels(mongoose : mongoose.Mongoose, modelpath: string)  : Promise<any> {\r\n    var modelNames = loadModelNames(modelpath);\r\n    var model_ES = mongoose.model(MongooseNLQ.MONGOOSE_MODELNAME_EXTENDEDSCHEMAS);\r\n    var model_Doc = mongoose.model(MongooseNLQ.MONGOOSE_MODELNAME_METAMODELS);\r\n    debuglog('here modelnames ' + modelNames);\r\n    return removeOthers(mongoose, model_ES, [MongoNLQ.MODELNAME_METAMODELS] ).then( ()=>\r\n        Promise.all(modelNames.map( (modelName) => {\r\n            debuglog('upserting  ' + modelName);\r\n            var modelDoc = loadModelDoc(modelpath, modelName);\r\n            var schemaSer = loadExtendedMongooseSchema(modelpath, modelName);\r\n            var schemaFull = augmentMongooseSchema(modelDoc, schemaSer);\r\n            debuglog(`upserting eschema ${modelName}  with modelDoc` + JSON.stringify(schemaFull));\r\n            var p1 = model_ES.findOneAndUpdate( { modelname : modelName }, schemaFull, {\r\n                upsert : true\r\n            });\r\n            debuglog(`upserting model ${modelName}  with modelDoc` + JSON.stringify(modelDoc));\r\n            var p2 = model_Doc.findOneAndUpdate( { modelname : modelName }, modelDoc, {\r\n                upsert : true\r\n            });\r\n            return Promise.all([p1,p2]);\r\n        })\r\n        )\r\n    ).then( () => {\r\n        var modelNamesExtended = modelNames.slice();\r\n        modelNamesExtended.push(MongoNLQ.MODELNAME_METAMODELS);\r\n        debuglog('removing spurious models');\r\n        return Promise.all([\r\n            removeOthers(mongoose, model_ES, modelNamesExtended ),\r\n            removeOthers(mongoose, model_Doc, modelNamesExtended )\r\n        ]);\r\n    }).then( () => {\r\n         return Promise.all([\r\n            uploadFillers(mongoose,modelpath),\r\n            uploadOperators(mongoose, modelpath)\r\n         ])\r\n    })\r\n}\r\n\r\nexport function hasMetaCollection(mongoose : any) : Promise<boolean> {\r\n    return new Promise(function(reject, resolve) {\r\n        mongoose.connection.db.listCollections().toArray((err ,names ) =>\r\n        {\r\n            if(err) {\r\n                reject(err);\r\n                return;\r\n            }\r\n            if(names.indexOf(MongoNLQ.COLL_METAMODELS) >= 0) {\r\n                resolve(true);\r\n            }\r\n            reject(\"domain not loaded\");\r\n        });\r\n    });\r\n}\r\n\r\nexport const MongoNLQ = {\r\n    MODELNAME_METAMODELS : \"metamodels\",\r\n    COLL_METAMODELS : \"metamodels\",\r\n    COLL_EXTENDEDSCHEMAS : \"mongonlq_eschemas\"\r\n};\r\n\r\n\r\nexport const MongooseNLQ = {\r\n    MONGOOSE_MODELNAME_EXTENDEDSCHEMAS : makeMongooseModelName(MongoNLQ.COLL_EXTENDEDSCHEMAS),\r\n    MONGOOSE_MODELNAME_METAMODELS : makeMongooseModelName(MongoNLQ.COLL_METAMODELS)\r\n};\r\n\r\nexport function getModelRecByModelName(mongoose : any, modelPath: string, modelName : string) : Promise<IModelRec>  {\r\n    // do we have the meta collection in the db?\r\n    return Promise.all([\r\n        mongoose.connection.db[MongoNLQ.COLL_METAMODELS].find({ modelName : modelName}),\r\n        mongoose.connection.db[MongoNLQ.COLL_EXTENDEDSCHEMAS].find({ modelName : modelName})\r\n    ]).then(res => {\r\n        var modelDoc = res[0];\r\n        var extendedSchema = res[1];\r\n        var schema = makeMongooseSchema(extendedSchema);\r\n        var model = mongoose.model(modelDoc.collectionName, schema);\r\n        return {\r\n            collectionName : modelDoc.collectionName,\r\n            modelDoc : modelDoc,\r\n            schema : makeMongooseSchema(extendedSchema),\r\n            model : model\r\n        } as IModelRec;\r\n    });\r\n}\r\n\r\n/*\r\n    hasMetaCollection(mongoose).then( () => {\r\n        mongoose.connection.db.mgnlq_domains.find( {\r\n            modelName : modelName\r\n        }).then( doc => {\r\n            if (doc.schema)\r\n        });\r\n    });\r\n    mongoose.connection.db.listCollections().toArray((err ,names ) =>\r\n    {\r\n        if(names.indexOf(\"mgnlq_domains\") >= 0) {\r\n\r\n        }\r\n    });\r\n}\r\n*/\r\n\r\n\r\nexport function validateDocMongoose(mongoose : mongoose.Mongoose, collectionname, schema : mongoose.Schema, doc : any ) {\r\n    var DocModel;\r\n    //console.log('schema ' + JSON.stringify(schema));\r\n    if(mongoose.modelNames().indexOf(collectionname) >= 0) {\r\n        DocModel = mongoose.model(collectionname);\r\n    } else {\r\n        DocModel = mongoose.model(collectionname, schema);\r\n\r\n    }\r\n    return validateDocVsMongooseModel(DocModel, doc);\r\n}\r\n\r\nexport function validateDocVsMongooseModel(model, doc : any) {\r\n    return new Promise<any>((resolve,reject) => {\r\n        var theDoc = new model(doc);\r\n        theDoc.validate((err) =>  {\r\n            if (err) {\r\n                //console.log(err);\r\n                reject(err);\r\n            }\r\n        else {\r\n            resolve(theDoc);\r\n        }\r\n        });\r\n    });\r\n}\r\n\r\nexport function validateDoc(collectionname: string, schema : mongoose.Schema, doc : any) {\r\n  var jsonSchemaR = (schema as any).jsonSchema();\r\n  var jsonSchema = _.cloneDeep(jsonSchemaR);\r\n  traverseExecuting(jsonSchema, function(obj,val,key) {\r\n    if(key === 'properties' && obj.type === 'object') {\r\n        //console.log('augmenting schema');\r\n        obj.additionalProperties = false;\r\n    }\r\n});\r\n\r\n  //console.log(JSON.stringify(jsonSchema,undefined,2));\r\n  var Validator = require('jsonschema').Validator;\r\n  var v = new Validator();\r\n  //console.log(JSON.stringify(jsonSchema,undefined,2));\r\n  var valresult = v.validate(doc,jsonSchema);\r\n  if(valresult.errors.length) {\r\n      throw new Error(\"Schema validation failed : \" + JSON.stringify(valresult.errors,undefined,2));\r\n  }\r\n  return true;\r\n}"],"sourceRoot":"ABC"}